// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: pay.proto

package pay

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// base message
type PayStatus int32

const (
	PayStatus_PAY_STATUS_UNKNOWN PayStatus = 0
	PayStatus_PAY_WAITING        PayStatus = 1
	PayStatus_PAY_SUCCESS        PayStatus = 2
	PayStatus_PAY_REFUND         PayStatus = 3
	PayStatus_PAY_CLOSED         PayStatus = 4
	PayStatus_PAY_FAILURE        PayStatus = 5
)

// Enum value maps for PayStatus.
var (
	PayStatus_name = map[int32]string{
		0: "PAY_STATUS_UNKNOWN",
		1: "PAY_WAITING",
		2: "PAY_SUCCESS",
		3: "PAY_REFUND",
		4: "PAY_CLOSED",
		5: "PAY_FAILURE",
	}
	PayStatus_value = map[string]int32{
		"PAY_STATUS_UNKNOWN": 0,
		"PAY_WAITING":        1,
		"PAY_SUCCESS":        2,
		"PAY_REFUND":         3,
		"PAY_CLOSED":         4,
		"PAY_FAILURE":        5,
	}
)

func (x PayStatus) Enum() *PayStatus {
	p := new(PayStatus)
	*p = x
	return p
}

func (x PayStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pay_proto_enumTypes[0].Descriptor()
}

func (PayStatus) Type() protoreflect.EnumType {
	return &file_pay_proto_enumTypes[0]
}

func (x PayStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayStatus.Descriptor instead.
func (PayStatus) EnumDescriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{0}
}

type PayType int32

const (
	PayType_PAY_TYPE_UNKNOWN PayType = 0
	PayType_PAY_ORDER        PayType = 1
	PayType_PAY_RETURN       PayType = 2
)

// Enum value maps for PayType.
var (
	PayType_name = map[int32]string{
		0: "PAY_TYPE_UNKNOWN",
		1: "PAY_ORDER",
		2: "PAY_RETURN",
	}
	PayType_value = map[string]int32{
		"PAY_TYPE_UNKNOWN": 0,
		"PAY_ORDER":        1,
		"PAY_RETURN":       2,
	}
)

func (x PayType) Enum() *PayType {
	p := new(PayType)
	*p = x
	return p
}

func (x PayType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayType) Descriptor() protoreflect.EnumDescriptor {
	return file_pay_proto_enumTypes[1].Descriptor()
}

func (PayType) Type() protoreflect.EnumType {
	return &file_pay_proto_enumTypes[1]
}

func (x PayType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayType.Descriptor instead.
func (PayType) EnumDescriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{1}
}

type PayChannel int32

const (
	PayChannel_ChannelUnknown PayChannel = 0
	PayChannel_WxPub          PayChannel = 1
	PayChannel_WxLite         PayChannel = 2
	PayChannel_WxApp          PayChannel = 3
	PayChannel_WxNative       PayChannel = 4
	PayChannel_AlipayPc       PayChannel = 5
	PayChannel_AlipayWap      PayChannel = 6
	PayChannel_AlipayQr       PayChannel = 7
	PayChannel_AlipayBar      PayChannel = 8
)

// Enum value maps for PayChannel.
var (
	PayChannel_name = map[int32]string{
		0: "ChannelUnknown",
		1: "WxPub",
		2: "WxLite",
		3: "WxApp",
		4: "WxNative",
		5: "AlipayPc",
		6: "AlipayWap",
		7: "AlipayQr",
		8: "AlipayBar",
	}
	PayChannel_value = map[string]int32{
		"ChannelUnknown": 0,
		"WxPub":          1,
		"WxLite":         2,
		"WxApp":          3,
		"WxNative":       4,
		"AlipayPc":       5,
		"AlipayWap":      6,
		"AlipayQr":       7,
		"AlipayBar":      8,
	}
)

func (x PayChannel) Enum() *PayChannel {
	p := new(PayChannel)
	*p = x
	return p
}

func (x PayChannel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayChannel) Descriptor() protoreflect.EnumDescriptor {
	return file_pay_proto_enumTypes[2].Descriptor()
}

func (PayChannel) Type() protoreflect.EnumType {
	return &file_pay_proto_enumTypes[2]
}

func (x PayChannel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayChannel.Descriptor instead.
func (PayChannel) EnumDescriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{2}
}

// TODO 给返回消息加上状态码？ 暂时没想好怎么用。
type RetCode int32

const (
	RetCode_SUCCESS          RetCode = 0
	RetCode_ERROR            RetCode = 500
	RetCode_TRADE_UUID_EMPTY RetCode = 7000003
)

// Enum value maps for RetCode.
var (
	RetCode_name = map[int32]string{
		0:       "SUCCESS",
		500:     "ERROR",
		7000003: "TRADE_UUID_EMPTY",
	}
	RetCode_value = map[string]int32{
		"SUCCESS":          0,
		"ERROR":            500,
		"TRADE_UUID_EMPTY": 7000003,
	}
)

func (x RetCode) Enum() *RetCode {
	p := new(RetCode)
	*p = x
	return p
}

func (x RetCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RetCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pay_proto_enumTypes[3].Descriptor()
}

func (RetCode) Type() protoreflect.EnumType {
	return &file_pay_proto_enumTypes[3]
}

func (x RetCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RetCode.Descriptor instead.
func (RetCode) EnumDescriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{3}
}

type RefundPageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*RefundInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *RefundPageResp) Reset() {
	*x = RefundPageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundPageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundPageResp) ProtoMessage() {}

func (x *RefundPageResp) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundPageResp.ProtoReflect.Descriptor instead.
func (*RefundPageResp) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{0}
}

func (x *RefundPageResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RefundPageResp) GetData() []*RefundInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type RefundDemoOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`
	UserIp string `protobuf:"bytes,3,opt,name=userIp,proto3" json:"userIp,omitempty"`
}

func (x *RefundDemoOrderReq) Reset() {
	*x = RefundDemoOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundDemoOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundDemoOrderReq) ProtoMessage() {}

func (x *RefundDemoOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundDemoOrderReq.ProtoReflect.Descriptor instead.
func (*RefundDemoOrderReq) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{1}
}

func (x *RefundDemoOrderReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RefundDemoOrderReq) GetUserIp() string {
	if x != nil {
		return x.UserIp
	}
	return ""
}

type OrderSubmitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64            `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ChannelCode   string            `protobuf:"bytes,2,opt,name=ChannelCode,proto3" json:"ChannelCode,omitempty"`
	ChannelExtras map[string]string `protobuf:"bytes,3,rep,name=ChannelExtras,proto3" json:"ChannelExtras,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DisplayMode   string            `protobuf:"bytes,4,opt,name=DisplayMode,proto3" json:"DisplayMode,omitempty"`
	ReturnUrl     string            `protobuf:"bytes,5,opt,name=ReturnUrl,proto3" json:"ReturnUrl,omitempty"`
	UserIP        string            `protobuf:"bytes,6,opt,name=UserIP,proto3" json:"UserIP,omitempty"`
}

func (x *OrderSubmitReq) Reset() {
	*x = OrderSubmitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSubmitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSubmitReq) ProtoMessage() {}

func (x *OrderSubmitReq) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSubmitReq.ProtoReflect.Descriptor instead.
func (*OrderSubmitReq) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{2}
}

func (x *OrderSubmitReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderSubmitReq) GetChannelCode() string {
	if x != nil {
		return x.ChannelCode
	}
	return ""
}

func (x *OrderSubmitReq) GetChannelExtras() map[string]string {
	if x != nil {
		return x.ChannelExtras
	}
	return nil
}

func (x *OrderSubmitReq) GetDisplayMode() string {
	if x != nil {
		return x.DisplayMode
	}
	return ""
}

func (x *OrderSubmitReq) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

func (x *OrderSubmitReq) GetUserIP() string {
	if x != nil {
		return x.UserIP
	}
	return ""
}

type RefundCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIp           string `protobuf:"bytes,2,opt,name=user_ip,json=userIp,proto3" json:"user_ip,omitempty"`
	MerchantOrderId  string `protobuf:"bytes,3,opt,name=merchant_order_id,json=merchantOrderId,proto3" json:"merchant_order_id,omitempty"`
	MerchantRefundId string `protobuf:"bytes,4,opt,name=merchant_refund_id,json=merchantRefundId,proto3" json:"merchant_refund_id,omitempty"`
	Reason           string `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	Price            int32  `protobuf:"varint,6,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *RefundCreateReq) Reset() {
	*x = RefundCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundCreateReq) ProtoMessage() {}

func (x *RefundCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundCreateReq.ProtoReflect.Descriptor instead.
func (*RefundCreateReq) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{3}
}

func (x *RefundCreateReq) GetUserIp() string {
	if x != nil {
		return x.UserIp
	}
	return ""
}

func (x *RefundCreateReq) GetMerchantOrderId() string {
	if x != nil {
		return x.MerchantOrderId
	}
	return ""
}

func (x *RefundCreateReq) GetMerchantRefundId() string {
	if x != nil {
		return x.MerchantRefundId
	}
	return ""
}

func (x *RefundCreateReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *RefundCreateReq) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type RefundPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page             uint64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize         uint64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	ChannelCode      *string `protobuf:"bytes,4,opt,name=channelCode,proto3,oneof" json:"channelCode,omitempty"`
	MerchantOrderId  *string `protobuf:"bytes,5,opt,name=merchantOrderId,proto3,oneof" json:"merchantOrderId,omitempty"`
	MerchantRefundId *string `protobuf:"bytes,6,opt,name=merchantRefundId,proto3,oneof" json:"merchantRefundId,omitempty"`
	ChannelOrderNo   *string `protobuf:"bytes,7,opt,name=channelOrderNo,proto3,oneof" json:"channelOrderNo,omitempty"`
	ChannelRefundNo  *string `protobuf:"bytes,8,opt,name=channelRefundNo,proto3,oneof" json:"channelRefundNo,omitempty"`
	Status           *uint32 `protobuf:"varint,9,opt,name=status,proto3,oneof" json:"status,omitempty"`
	CreateTime       []int64 `protobuf:"varint,10,rep,packed,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *RefundPageReq) Reset() {
	*x = RefundPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundPageReq) ProtoMessage() {}

func (x *RefundPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundPageReq.ProtoReflect.Descriptor instead.
func (*RefundPageReq) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{4}
}

func (x *RefundPageReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RefundPageReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RefundPageReq) GetChannelCode() string {
	if x != nil && x.ChannelCode != nil {
		return *x.ChannelCode
	}
	return ""
}

func (x *RefundPageReq) GetMerchantOrderId() string {
	if x != nil && x.MerchantOrderId != nil {
		return *x.MerchantOrderId
	}
	return ""
}

func (x *RefundPageReq) GetMerchantRefundId() string {
	if x != nil && x.MerchantRefundId != nil {
		return *x.MerchantRefundId
	}
	return ""
}

func (x *RefundPageReq) GetChannelOrderNo() string {
	if x != nil && x.ChannelOrderNo != nil {
		return *x.ChannelOrderNo
	}
	return ""
}

func (x *RefundPageReq) GetChannelRefundNo() string {
	if x != nil && x.ChannelRefundNo != nil {
		return *x.ChannelRefundNo
	}
	return ""
}

func (x *RefundPageReq) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *RefundPageReq) GetCreateTime() []int64 {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

type NotifyRefundReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status            uint32 `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	OutRefundNo       string `protobuf:"bytes,2,opt,name=OutRefundNo,proto3" json:"OutRefundNo,omitempty"`
	ChannelRefundNo   string `protobuf:"bytes,3,opt,name=ChannelRefundNo,proto3" json:"ChannelRefundNo,omitempty"`
	SuccessTime       int64  `protobuf:"varint,4,opt,name=SuccessTime,proto3" json:"SuccessTime,omitempty"`
	ChannelNotifyData string `protobuf:"bytes,5,opt,name=ChannelNotifyData,proto3" json:"ChannelNotifyData,omitempty"`
	ChannelErrorCode  string `protobuf:"bytes,6,opt,name=ChannelErrorCode,proto3" json:"ChannelErrorCode,omitempty"`
	ChannelErrorMsg   string `protobuf:"bytes,7,opt,name=ChannelErrorMsg,proto3" json:"ChannelErrorMsg,omitempty"`
	ChannelCode       string `protobuf:"bytes,8,opt,name=channelCode,proto3" json:"channelCode,omitempty"`
}

func (x *NotifyRefundReq) Reset() {
	*x = NotifyRefundReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRefundReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRefundReq) ProtoMessage() {}

func (x *NotifyRefundReq) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRefundReq.ProtoReflect.Descriptor instead.
func (*NotifyRefundReq) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{5}
}

func (x *NotifyRefundReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *NotifyRefundReq) GetOutRefundNo() string {
	if x != nil {
		return x.OutRefundNo
	}
	return ""
}

func (x *NotifyRefundReq) GetChannelRefundNo() string {
	if x != nil {
		return x.ChannelRefundNo
	}
	return ""
}

func (x *NotifyRefundReq) GetSuccessTime() int64 {
	if x != nil {
		return x.SuccessTime
	}
	return 0
}

func (x *NotifyRefundReq) GetChannelNotifyData() string {
	if x != nil {
		return x.ChannelNotifyData
	}
	return ""
}

func (x *NotifyRefundReq) GetChannelErrorCode() string {
	if x != nil {
		return x.ChannelErrorCode
	}
	return ""
}

func (x *NotifyRefundReq) GetChannelErrorMsg() string {
	if x != nil {
		return x.ChannelErrorMsg
	}
	return ""
}

func (x *NotifyRefundReq) GetChannelCode() string {
	if x != nil {
		return x.ChannelCode
	}
	return ""
}

// base message
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{6}
}

type DemoOrderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *uint64 `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	CreatedAt      *int64  `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
	UpdatedAt      *int64  `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
	UserId         *string `protobuf:"bytes,4,opt,name=userId,proto3,oneof" json:"userId,omitempty"`
	SpuId          *uint64 `protobuf:"varint,5,opt,name=spuId,proto3,oneof" json:"spuId,omitempty"`
	SpuName        *string `protobuf:"bytes,6,opt,name=spuName,proto3,oneof" json:"spuName,omitempty"`
	Price          *int32  `protobuf:"varint,7,opt,name=price,proto3,oneof" json:"price,omitempty"`
	PayStatus      *bool   `protobuf:"varint,8,opt,name=pay_status,json=payStatus,proto3,oneof" json:"pay_status,omitempty"`
	PayOrderId     *uint64 `protobuf:"varint,9,opt,name=pay_orderId,json=payOrderId,proto3,oneof" json:"pay_orderId,omitempty"`
	PayTime        *int64  `protobuf:"varint,10,opt,name=pay_time,json=payTime,proto3,oneof" json:"pay_time,omitempty"`
	PayChannelCode *string `protobuf:"bytes,11,opt,name=pay_channel_code,json=payChannelCode,proto3,oneof" json:"pay_channel_code,omitempty"`
	PayRefundId    *uint64 `protobuf:"varint,12,opt,name=pay_refund_id,json=payRefundId,proto3,oneof" json:"pay_refund_id,omitempty"`
	RefundPrice    *int32  `protobuf:"varint,13,opt,name=refund_price,json=refundPrice,proto3,oneof" json:"refund_price,omitempty"`
	RefundTime     *int64  `protobuf:"varint,14,opt,name=refund_time,json=refundTime,proto3,oneof" json:"refund_time,omitempty"`
}

func (x *DemoOrderInfo) Reset() {
	*x = DemoOrderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DemoOrderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DemoOrderInfo) ProtoMessage() {}

func (x *DemoOrderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DemoOrderInfo.ProtoReflect.Descriptor instead.
func (*DemoOrderInfo) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{7}
}

func (x *DemoOrderInfo) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *DemoOrderInfo) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *DemoOrderInfo) GetUpdatedAt() int64 {
	if x != nil && x.UpdatedAt != nil {
		return *x.UpdatedAt
	}
	return 0
}

func (x *DemoOrderInfo) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *DemoOrderInfo) GetSpuId() uint64 {
	if x != nil && x.SpuId != nil {
		return *x.SpuId
	}
	return 0
}

func (x *DemoOrderInfo) GetSpuName() string {
	if x != nil && x.SpuName != nil {
		return *x.SpuName
	}
	return ""
}

func (x *DemoOrderInfo) GetPrice() int32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *DemoOrderInfo) GetPayStatus() bool {
	if x != nil && x.PayStatus != nil {
		return *x.PayStatus
	}
	return false
}

func (x *DemoOrderInfo) GetPayOrderId() uint64 {
	if x != nil && x.PayOrderId != nil {
		return *x.PayOrderId
	}
	return 0
}

func (x *DemoOrderInfo) GetPayTime() int64 {
	if x != nil && x.PayTime != nil {
		return *x.PayTime
	}
	return 0
}

func (x *DemoOrderInfo) GetPayChannelCode() string {
	if x != nil && x.PayChannelCode != nil {
		return *x.PayChannelCode
	}
	return ""
}

func (x *DemoOrderInfo) GetPayRefundId() uint64 {
	if x != nil && x.PayRefundId != nil {
		return *x.PayRefundId
	}
	return 0
}

func (x *DemoOrderInfo) GetRefundPrice() int32 {
	if x != nil && x.RefundPrice != nil {
		return *x.RefundPrice
	}
	return 0
}

func (x *DemoOrderInfo) GetRefundTime() int64 {
	if x != nil && x.RefundTime != nil {
		return *x.RefundTime
	}
	return 0
}

type PayDemoOrderCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	SpuId  uint64 `protobuf:"varint,2,opt,name=spuId,proto3" json:"spuId,omitempty"`
	UserIp string `protobuf:"bytes,3,opt,name=userIp,proto3" json:"userIp,omitempty"`
}

func (x *PayDemoOrderCreateReq) Reset() {
	*x = PayDemoOrderCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayDemoOrderCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayDemoOrderCreateReq) ProtoMessage() {}

func (x *PayDemoOrderCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayDemoOrderCreateReq.ProtoReflect.Descriptor instead.
func (*PayDemoOrderCreateReq) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{8}
}

func (x *PayDemoOrderCreateReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PayDemoOrderCreateReq) GetSpuId() uint64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *PayDemoOrderCreateReq) GetUserIp() string {
	if x != nil {
		return x.UserIp
	}
	return ""
}

// refund message
type RefundInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                *uint64 `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	CreatedAt         *int64  `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
	UpdatedAt         *int64  `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
	Status            *uint32 `protobuf:"varint,4,opt,name=status,proto3,oneof" json:"status,omitempty"`
	No                *string `protobuf:"bytes,5,opt,name=no,proto3,oneof" json:"no,omitempty"`
	ChannelCode       *string `protobuf:"bytes,6,opt,name=channel_code,json=channelCode,proto3,oneof" json:"channel_code,omitempty"`
	OrderId           *uint64 `protobuf:"varint,7,opt,name=order_id,json=orderId,proto3,oneof" json:"order_id,omitempty"`
	OrderNo           *string `protobuf:"bytes,8,opt,name=order_no,json=orderNo,proto3,oneof" json:"order_no,omitempty"`
	MerchantOrderId   *string `protobuf:"bytes,9,opt,name=merchant_order_id,json=merchantOrderId,proto3,oneof" json:"merchant_order_id,omitempty"`
	MerchantRefundId  *string `protobuf:"bytes,10,opt,name=merchant_refund_id,json=merchantRefundId,proto3,oneof" json:"merchant_refund_id,omitempty"`
	PayPrice          *int32  `protobuf:"varint,11,opt,name=pay_price,json=payPrice,proto3,oneof" json:"pay_price,omitempty"`
	RefundPrice       *int32  `protobuf:"varint,12,opt,name=refund_price,json=refundPrice,proto3,oneof" json:"refund_price,omitempty"`
	Reason            *string `protobuf:"bytes,13,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	UserIp            *string `protobuf:"bytes,14,opt,name=user_ip,json=userIp,proto3,oneof" json:"user_ip,omitempty"`
	ChannelOrderNo    *string `protobuf:"bytes,15,opt,name=channel_order_no,json=channelOrderNo,proto3,oneof" json:"channel_order_no,omitempty"`
	ChannelRefundNo   *string `protobuf:"bytes,16,opt,name=channel_refund_no,json=channelRefundNo,proto3,oneof" json:"channel_refund_no,omitempty"`
	SuccessTime       *int64  `protobuf:"varint,17,opt,name=success_time,json=successTime,proto3,oneof" json:"success_time,omitempty"`
	ChannelErrorCode  *string `protobuf:"bytes,18,opt,name=channel_error_code,json=channelErrorCode,proto3,oneof" json:"channel_error_code,omitempty"`
	ChannelErrorMsg   *string `protobuf:"bytes,19,opt,name=channel_error_msg,json=channelErrorMsg,proto3,oneof" json:"channel_error_msg,omitempty"`
	ChannelNotifyData *string `protobuf:"bytes,20,opt,name=channel_notify_data,json=channelNotifyData,proto3,oneof" json:"channel_notify_data,omitempty"`
}

func (x *RefundInfo) Reset() {
	*x = RefundInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundInfo) ProtoMessage() {}

func (x *RefundInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundInfo.ProtoReflect.Descriptor instead.
func (*RefundInfo) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{9}
}

func (x *RefundInfo) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *RefundInfo) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *RefundInfo) GetUpdatedAt() int64 {
	if x != nil && x.UpdatedAt != nil {
		return *x.UpdatedAt
	}
	return 0
}

func (x *RefundInfo) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *RefundInfo) GetNo() string {
	if x != nil && x.No != nil {
		return *x.No
	}
	return ""
}

func (x *RefundInfo) GetChannelCode() string {
	if x != nil && x.ChannelCode != nil {
		return *x.ChannelCode
	}
	return ""
}

func (x *RefundInfo) GetOrderId() uint64 {
	if x != nil && x.OrderId != nil {
		return *x.OrderId
	}
	return 0
}

func (x *RefundInfo) GetOrderNo() string {
	if x != nil && x.OrderNo != nil {
		return *x.OrderNo
	}
	return ""
}

func (x *RefundInfo) GetMerchantOrderId() string {
	if x != nil && x.MerchantOrderId != nil {
		return *x.MerchantOrderId
	}
	return ""
}

func (x *RefundInfo) GetMerchantRefundId() string {
	if x != nil && x.MerchantRefundId != nil {
		return *x.MerchantRefundId
	}
	return ""
}

func (x *RefundInfo) GetPayPrice() int32 {
	if x != nil && x.PayPrice != nil {
		return *x.PayPrice
	}
	return 0
}

func (x *RefundInfo) GetRefundPrice() int32 {
	if x != nil && x.RefundPrice != nil {
		return *x.RefundPrice
	}
	return 0
}

func (x *RefundInfo) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *RefundInfo) GetUserIp() string {
	if x != nil && x.UserIp != nil {
		return *x.UserIp
	}
	return ""
}

func (x *RefundInfo) GetChannelOrderNo() string {
	if x != nil && x.ChannelOrderNo != nil {
		return *x.ChannelOrderNo
	}
	return ""
}

func (x *RefundInfo) GetChannelRefundNo() string {
	if x != nil && x.ChannelRefundNo != nil {
		return *x.ChannelRefundNo
	}
	return ""
}

func (x *RefundInfo) GetSuccessTime() int64 {
	if x != nil && x.SuccessTime != nil {
		return *x.SuccessTime
	}
	return 0
}

func (x *RefundInfo) GetChannelErrorCode() string {
	if x != nil && x.ChannelErrorCode != nil {
		return *x.ChannelErrorCode
	}
	return ""
}

func (x *RefundInfo) GetChannelErrorMsg() string {
	if x != nil && x.ChannelErrorMsg != nil {
		return *x.ChannelErrorMsg
	}
	return ""
}

func (x *RefundInfo) GetChannelNotifyData() string {
	if x != nil && x.ChannelNotifyData != nil {
		return *x.ChannelNotifyData
	}
	return ""
}

type UUIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UUIDReq) Reset() {
	*x = UUIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UUIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUIDReq) ProtoMessage() {}

func (x *UUIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUIDReq.ProtoReflect.Descriptor instead.
func (*UUIDReq) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{10}
}

func (x *UUIDReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type BaseUUIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *BaseUUIDResp) Reset() {
	*x = BaseUUIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseUUIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseUUIDResp) ProtoMessage() {}

func (x *BaseUUIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseUUIDResp.ProtoReflect.Descriptor instead.
func (*BaseUUIDResp) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{11}
}

func (x *BaseUUIDResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BaseUUIDResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type DemoOrderPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize uint64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *DemoOrderPageReq) Reset() {
	*x = DemoOrderPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DemoOrderPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DemoOrderPageReq) ProtoMessage() {}

func (x *DemoOrderPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DemoOrderPageReq.ProtoReflect.Descriptor instead.
func (*DemoOrderPageReq) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{12}
}

func (x *DemoOrderPageReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DemoOrderPageReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type UpdateDemoRefundPaidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PayRefundId uint64 `protobuf:"varint,2,opt,name=payRefundId,proto3" json:"payRefundId,omitempty"`
}

func (x *UpdateDemoRefundPaidReq) Reset() {
	*x = UpdateDemoRefundPaidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDemoRefundPaidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDemoRefundPaidReq) ProtoMessage() {}

func (x *UpdateDemoRefundPaidReq) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDemoRefundPaidReq.ProtoReflect.Descriptor instead.
func (*UpdateDemoRefundPaidReq) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateDemoRefundPaidReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDemoRefundPaidReq) GetPayRefundId() uint64 {
	if x != nil {
		return x.PayRefundId
	}
	return 0
}

type OrderExtensionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                *uint64           `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	CreatedAt         *int64            `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
	UpdatedAt         *int64            `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
	Status            *uint32           `protobuf:"varint,4,opt,name=status,proto3,oneof" json:"status,omitempty"`
	No                *string           `protobuf:"bytes,5,opt,name=no,proto3,oneof" json:"no,omitempty"`
	OrderId           *uint64           `protobuf:"varint,6,opt,name=order_id,json=orderId,proto3,oneof" json:"order_id,omitempty"`
	ChannelCode       *string           `protobuf:"bytes,8,opt,name=channel_code,json=channelCode,proto3,oneof" json:"channel_code,omitempty"`
	UserIp            *string           `protobuf:"bytes,9,opt,name=user_ip,json=userIp,proto3,oneof" json:"user_ip,omitempty"`
	ChannelExtras     map[string]string `protobuf:"bytes,10,rep,name=channel_extras,json=channelExtras,proto3" json:"channel_extras,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ChannelErrorCode  *string           `protobuf:"bytes,11,opt,name=channel_error_code,json=channelErrorCode,proto3,oneof" json:"channel_error_code,omitempty"`
	ChannelErrorMsg   *string           `protobuf:"bytes,12,opt,name=channel_error_msg,json=channelErrorMsg,proto3,oneof" json:"channel_error_msg,omitempty"`
	ChannelNotifyData *string           `protobuf:"bytes,13,opt,name=channel_notify_data,json=channelNotifyData,proto3,oneof" json:"channel_notify_data,omitempty"`
}

func (x *OrderExtensionInfo) Reset() {
	*x = OrderExtensionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderExtensionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderExtensionInfo) ProtoMessage() {}

func (x *OrderExtensionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderExtensionInfo.ProtoReflect.Descriptor instead.
func (*OrderExtensionInfo) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{14}
}

func (x *OrderExtensionInfo) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *OrderExtensionInfo) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *OrderExtensionInfo) GetUpdatedAt() int64 {
	if x != nil && x.UpdatedAt != nil {
		return *x.UpdatedAt
	}
	return 0
}

func (x *OrderExtensionInfo) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *OrderExtensionInfo) GetNo() string {
	if x != nil && x.No != nil {
		return *x.No
	}
	return ""
}

func (x *OrderExtensionInfo) GetOrderId() uint64 {
	if x != nil && x.OrderId != nil {
		return *x.OrderId
	}
	return 0
}

func (x *OrderExtensionInfo) GetChannelCode() string {
	if x != nil && x.ChannelCode != nil {
		return *x.ChannelCode
	}
	return ""
}

func (x *OrderExtensionInfo) GetUserIp() string {
	if x != nil && x.UserIp != nil {
		return *x.UserIp
	}
	return ""
}

func (x *OrderExtensionInfo) GetChannelExtras() map[string]string {
	if x != nil {
		return x.ChannelExtras
	}
	return nil
}

func (x *OrderExtensionInfo) GetChannelErrorCode() string {
	if x != nil && x.ChannelErrorCode != nil {
		return *x.ChannelErrorCode
	}
	return ""
}

func (x *OrderExtensionInfo) GetChannelErrorMsg() string {
	if x != nil && x.ChannelErrorMsg != nil {
		return *x.ChannelErrorMsg
	}
	return ""
}

func (x *OrderExtensionInfo) GetChannelNotifyData() string {
	if x != nil && x.ChannelNotifyData != nil {
		return *x.ChannelNotifyData
	}
	return ""
}

type OrderPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page            uint64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize        uint64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	ChannelCode     *string `protobuf:"bytes,4,opt,name=channelCode,proto3,oneof" json:"channelCode,omitempty"`
	MerchantOrderId *string `protobuf:"bytes,5,opt,name=merchantOrderId,proto3,oneof" json:"merchantOrderId,omitempty"`
	ChannelOrderNo  *string `protobuf:"bytes,6,opt,name=channelOrderNo,proto3,oneof" json:"channelOrderNo,omitempty"`
	No              *string `protobuf:"bytes,7,opt,name=no,proto3,oneof" json:"no,omitempty"`
	Status          *uint32 `protobuf:"varint,8,opt,name=status,proto3,oneof" json:"status,omitempty"`
	CreateTime      []int64 `protobuf:"varint,9,rep,packed,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *OrderPageReq) Reset() {
	*x = OrderPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPageReq) ProtoMessage() {}

func (x *OrderPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPageReq.ProtoReflect.Descriptor instead.
func (*OrderPageReq) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{15}
}

func (x *OrderPageReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *OrderPageReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OrderPageReq) GetChannelCode() string {
	if x != nil && x.ChannelCode != nil {
		return *x.ChannelCode
	}
	return ""
}

func (x *OrderPageReq) GetMerchantOrderId() string {
	if x != nil && x.MerchantOrderId != nil {
		return *x.MerchantOrderId
	}
	return ""
}

func (x *OrderPageReq) GetChannelOrderNo() string {
	if x != nil && x.ChannelOrderNo != nil {
		return *x.ChannelOrderNo
	}
	return ""
}

func (x *OrderPageReq) GetNo() string {
	if x != nil && x.No != nil {
		return *x.No
	}
	return ""
}

func (x *OrderPageReq) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *OrderPageReq) GetCreateTime() []int64 {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

type StringList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []string `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *StringList) Reset() {
	*x = StringList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringList) ProtoMessage() {}

func (x *StringList) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringList.ProtoReflect.Descriptor instead.
func (*StringList) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{16}
}

func (x *StringList) GetItems() []string {
	if x != nil {
		return x.Items
	}
	return nil
}

type OrderCreateExtensionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderID       uint64            `protobuf:"varint,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
	ChannelCode   string            `protobuf:"bytes,2,opt,name=channelCode,proto3" json:"channelCode,omitempty"`
	ChannelExtras map[string]string `protobuf:"bytes,3,rep,name=channelExtras,proto3" json:"channelExtras,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	No            string            `protobuf:"bytes,4,opt,name=no,proto3" json:"no,omitempty"`
	Status        uint32            `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	UserIP        string            `protobuf:"bytes,7,opt,name=userIP,proto3" json:"userIP,omitempty"`
}

func (x *OrderCreateExtensionReq) Reset() {
	*x = OrderCreateExtensionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreateExtensionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreateExtensionReq) ProtoMessage() {}

func (x *OrderCreateExtensionReq) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreateExtensionReq.ProtoReflect.Descriptor instead.
func (*OrderCreateExtensionReq) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{17}
}

func (x *OrderCreateExtensionReq) GetOrderID() uint64 {
	if x != nil {
		return x.OrderID
	}
	return 0
}

func (x *OrderCreateExtensionReq) GetChannelCode() string {
	if x != nil {
		return x.ChannelCode
	}
	return ""
}

func (x *OrderCreateExtensionReq) GetChannelExtras() map[string]string {
	if x != nil {
		return x.ChannelExtras
	}
	return nil
}

func (x *OrderCreateExtensionReq) GetNo() string {
	if x != nil {
		return x.No
	}
	return ""
}

func (x *OrderCreateExtensionReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OrderCreateExtensionReq) GetUserIP() string {
	if x != nil {
		return x.UserIP
	}
	return ""
}

type BaseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *BaseResp) Reset() {
	*x = BaseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResp) ProtoMessage() {}

func (x *BaseResp) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResp.ProtoReflect.Descriptor instead.
func (*BaseResp) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{18}
}

func (x *BaseResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type PageInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize uint64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *PageInfoReq) Reset() {
	*x = PageInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfoReq) ProtoMessage() {}

func (x *PageInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfoReq.ProtoReflect.Descriptor instead.
func (*PageInfoReq) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{19}
}

func (x *PageInfoReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageInfoReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type DemoOrderListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total         uint64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	DemoOrderList []*DemoOrderInfo `protobuf:"bytes,2,rep,name=demoOrderList,proto3" json:"demoOrderList,omitempty"`
}

func (x *DemoOrderListResp) Reset() {
	*x = DemoOrderListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DemoOrderListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DemoOrderListResp) ProtoMessage() {}

func (x *DemoOrderListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DemoOrderListResp.ProtoReflect.Descriptor instead.
func (*DemoOrderListResp) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{20}
}

func (x *DemoOrderListResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DemoOrderListResp) GetDemoOrderList() []*DemoOrderInfo {
	if x != nil {
		return x.DemoOrderList
	}
	return nil
}

type BaseMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *BaseMsg) Reset() {
	*x = BaseMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseMsg) ProtoMessage() {}

func (x *BaseMsg) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseMsg.ProtoReflect.Descriptor instead.
func (*BaseMsg) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{21}
}

func (x *BaseMsg) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type OrderListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*OrderInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *OrderListResp) Reset() {
	*x = OrderListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderListResp) ProtoMessage() {}

func (x *OrderListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderListResp.ProtoReflect.Descriptor instead.
func (*OrderListResp) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{22}
}

func (x *OrderListResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OrderListResp) GetData() []*OrderInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type OrderSubmitResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status         uint32  `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	DisplayMode    *string `protobuf:"bytes,2,opt,name=DisplayMode,proto3,oneof" json:"DisplayMode,omitempty"`
	DisplayContent *string `protobuf:"bytes,3,opt,name=DisplayContent,proto3,oneof" json:"DisplayContent,omitempty"`
}

func (x *OrderSubmitResp) Reset() {
	*x = OrderSubmitResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSubmitResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSubmitResp) ProtoMessage() {}

func (x *OrderSubmitResp) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSubmitResp.ProtoReflect.Descriptor instead.
func (*OrderSubmitResp) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{23}
}

func (x *OrderSubmitResp) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OrderSubmitResp) GetDisplayMode() string {
	if x != nil && x.DisplayMode != nil {
		return *x.DisplayMode
	}
	return ""
}

func (x *OrderSubmitResp) GetDisplayContent() string {
	if x != nil && x.DisplayContent != nil {
		return *x.DisplayContent
	}
	return ""
}

type RefundCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *RefundCountResp) Reset() {
	*x = RefundCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundCountResp) ProtoMessage() {}

func (x *RefundCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundCountResp.ProtoReflect.Descriptor instead.
func (*RefundCountResp) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{24}
}

func (x *RefundCountResp) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type OrderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              *uint64  `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	CreatedAt       *int64   `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
	UpdatedAt       *int64   `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
	Status          *uint32  `protobuf:"varint,4,opt,name=status,proto3,oneof" json:"status,omitempty"`
	ChannelCode     *string  `protobuf:"bytes,5,opt,name=channel_code,json=channelCode,proto3,oneof" json:"channel_code,omitempty"`
	MerchantOrderId *string  `protobuf:"bytes,6,opt,name=merchant_order_id,json=merchantOrderId,proto3,oneof" json:"merchant_order_id,omitempty"`
	Subject         *string  `protobuf:"bytes,7,opt,name=subject,proto3,oneof" json:"subject,omitempty"`
	Body            *string  `protobuf:"bytes,8,opt,name=body,proto3,oneof" json:"body,omitempty"`
	Price           *int32   `protobuf:"varint,9,opt,name=price,proto3,oneof" json:"price,omitempty"`
	ChannelFeeRate  *float64 `protobuf:"fixed64,10,opt,name=channel_fee_rate,json=channelFeeRate,proto3,oneof" json:"channel_fee_rate,omitempty"`
	ChannelFeePrice *int32   `protobuf:"varint,11,opt,name=channel_fee_price,json=channelFeePrice,proto3,oneof" json:"channel_fee_price,omitempty"`
	UserIp          *string  `protobuf:"bytes,12,opt,name=user_ip,json=userIp,proto3,oneof" json:"user_ip,omitempty"`
	ExpireTime      *int64   `protobuf:"varint,13,opt,name=expire_time,json=expireTime,proto3,oneof" json:"expire_time,omitempty"`
	SuccessTime     *int64   `protobuf:"varint,14,opt,name=success_time,json=successTime,proto3,oneof" json:"success_time,omitempty"`
	NotifyTime      *int64   `protobuf:"varint,15,opt,name=notify_time,json=notifyTime,proto3,oneof" json:"notify_time,omitempty"`
	ExtensionId     *uint64  `protobuf:"varint,16,opt,name=extension_id,json=extensionId,proto3,oneof" json:"extension_id,omitempty"`
	No              *string  `protobuf:"bytes,17,opt,name=no,proto3,oneof" json:"no,omitempty"`
	RefundPrice     *int32   `protobuf:"varint,18,opt,name=refund_price,json=refundPrice,proto3,oneof" json:"refund_price,omitempty"`
	ChannelUserId   *string  `protobuf:"bytes,19,opt,name=channel_user_id,json=channelUserId,proto3,oneof" json:"channel_user_id,omitempty"`
	ChannelOrderNo  *string  `protobuf:"bytes,20,opt,name=channel_order_no,json=channelOrderNo,proto3,oneof" json:"channel_order_no,omitempty"`
}

func (x *OrderInfo) Reset() {
	*x = OrderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderInfo) ProtoMessage() {}

func (x *OrderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderInfo.ProtoReflect.Descriptor instead.
func (*OrderInfo) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{25}
}

func (x *OrderInfo) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *OrderInfo) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *OrderInfo) GetUpdatedAt() int64 {
	if x != nil && x.UpdatedAt != nil {
		return *x.UpdatedAt
	}
	return 0
}

func (x *OrderInfo) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *OrderInfo) GetChannelCode() string {
	if x != nil && x.ChannelCode != nil {
		return *x.ChannelCode
	}
	return ""
}

func (x *OrderInfo) GetMerchantOrderId() string {
	if x != nil && x.MerchantOrderId != nil {
		return *x.MerchantOrderId
	}
	return ""
}

func (x *OrderInfo) GetSubject() string {
	if x != nil && x.Subject != nil {
		return *x.Subject
	}
	return ""
}

func (x *OrderInfo) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

func (x *OrderInfo) GetPrice() int32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *OrderInfo) GetChannelFeeRate() float64 {
	if x != nil && x.ChannelFeeRate != nil {
		return *x.ChannelFeeRate
	}
	return 0
}

func (x *OrderInfo) GetChannelFeePrice() int32 {
	if x != nil && x.ChannelFeePrice != nil {
		return *x.ChannelFeePrice
	}
	return 0
}

func (x *OrderInfo) GetUserIp() string {
	if x != nil && x.UserIp != nil {
		return *x.UserIp
	}
	return ""
}

func (x *OrderInfo) GetExpireTime() int64 {
	if x != nil && x.ExpireTime != nil {
		return *x.ExpireTime
	}
	return 0
}

func (x *OrderInfo) GetSuccessTime() int64 {
	if x != nil && x.SuccessTime != nil {
		return *x.SuccessTime
	}
	return 0
}

func (x *OrderInfo) GetNotifyTime() int64 {
	if x != nil && x.NotifyTime != nil {
		return *x.NotifyTime
	}
	return 0
}

func (x *OrderInfo) GetExtensionId() uint64 {
	if x != nil && x.ExtensionId != nil {
		return *x.ExtensionId
	}
	return 0
}

func (x *OrderInfo) GetNo() string {
	if x != nil && x.No != nil {
		return *x.No
	}
	return ""
}

func (x *OrderInfo) GetRefundPrice() int32 {
	if x != nil && x.RefundPrice != nil {
		return *x.RefundPrice
	}
	return 0
}

func (x *OrderInfo) GetChannelUserId() string {
	if x != nil && x.ChannelUserId != nil {
		return *x.ChannelUserId
	}
	return ""
}

func (x *OrderInfo) GetChannelOrderNo() string {
	if x != nil && x.ChannelOrderNo != nil {
		return *x.ChannelOrderNo
	}
	return ""
}

type OrderCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIp            string `protobuf:"bytes,2,opt,name=userIp,proto3" json:"userIp,omitempty"`
	MerchantOrderId   string `protobuf:"bytes,3,opt,name=merchantOrderId,proto3" json:"merchantOrderId,omitempty"`
	Subject           string `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	Body              string `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	Price             int32  `protobuf:"varint,6,opt,name=price,proto3" json:"price,omitempty"`
	ExpireTime        int64  `protobuf:"varint,7,opt,name=expireTime,proto3" json:"expireTime,omitempty"`
	NotifyBusinessUrl string `protobuf:"bytes,8,opt,name=notifyBusinessUrl,proto3" json:"notifyBusinessUrl,omitempty"`
}

func (x *OrderCreateReq) Reset() {
	*x = OrderCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreateReq) ProtoMessage() {}

func (x *OrderCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreateReq.ProtoReflect.Descriptor instead.
func (*OrderCreateReq) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{26}
}

func (x *OrderCreateReq) GetUserIp() string {
	if x != nil {
		return x.UserIp
	}
	return ""
}

func (x *OrderCreateReq) GetMerchantOrderId() string {
	if x != nil {
		return x.MerchantOrderId
	}
	return ""
}

func (x *OrderCreateReq) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *OrderCreateReq) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *OrderCreateReq) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderCreateReq) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *OrderCreateReq) GetNotifyBusinessUrl() string {
	if x != nil {
		return x.NotifyBusinessUrl
	}
	return ""
}

type NoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	No string `protobuf:"bytes,1,opt,name=no,proto3" json:"no,omitempty"`
}

func (x *NoReq) Reset() {
	*x = NoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoReq) ProtoMessage() {}

func (x *NoReq) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoReq.ProtoReflect.Descriptor instead.
func (*NoReq) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{27}
}

func (x *NoReq) GetNo() string {
	if x != nil {
		return x.No
	}
	return ""
}

type NotifyOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R    []byte `protobuf:"bytes,1,opt,name=r,proto3" json:"r,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *NotifyOrderReq) Reset() {
	*x = NotifyOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyOrderReq) ProtoMessage() {}

func (x *NotifyOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyOrderReq.ProtoReflect.Descriptor instead.
func (*NotifyOrderReq) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{28}
}

func (x *NotifyOrderReq) GetR() []byte {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *NotifyOrderReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type IDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IDReq) Reset() {
	*x = IDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDReq) ProtoMessage() {}

func (x *IDReq) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDReq.ProtoReflect.Descriptor instead.
func (*IDReq) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{29}
}

func (x *IDReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IDsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *IDsReq) Reset() {
	*x = IDsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDsReq) ProtoMessage() {}

func (x *IDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDsReq.ProtoReflect.Descriptor instead.
func (*IDsReq) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{30}
}

func (x *IDsReq) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type BaseIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *BaseIDResp) Reset() {
	*x = BaseIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseIDResp) ProtoMessage() {}

func (x *BaseIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseIDResp.ProtoReflect.Descriptor instead.
func (*BaseIDResp) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{31}
}

func (x *BaseIDResp) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BaseIDResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UUIDsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *UUIDsReq) Reset() {
	*x = UUIDsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UUIDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUIDsReq) ProtoMessage() {}

func (x *UUIDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUIDsReq.ProtoReflect.Descriptor instead.
func (*UUIDsReq) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{32}
}

func (x *UUIDsReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type UpdateDemoOrderPaidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PayOrderId uint64 `protobuf:"varint,2,opt,name=payOrderId,proto3" json:"payOrderId,omitempty"`
}

func (x *UpdateDemoOrderPaidReq) Reset() {
	*x = UpdateDemoOrderPaidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDemoOrderPaidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDemoOrderPaidReq) ProtoMessage() {}

func (x *UpdateDemoOrderPaidReq) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDemoOrderPaidReq.ProtoReflect.Descriptor instead.
func (*UpdateDemoOrderPaidReq) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateDemoOrderPaidReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDemoOrderPaidReq) GetPayOrderId() uint64 {
	if x != nil {
		return x.PayOrderId
	}
	return 0
}

var File_pay_proto protoreflect.FileDescriptor

var file_pay_proto_rawDesc = []byte{
	0x0a, 0x09, 0x70, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x70, 0x61, 0x79,
	0x22, 0x4b, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3c, 0x0a,
	0x12, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x70, 0x22, 0xaa, 0x02, 0x0a, 0x0e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x4c, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x50, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x50, 0x1a, 0x40, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb2, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x70, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0xcb, 0x03,
	0x0a, 0x0d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x25, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x0f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x10, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x10, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e,
	0x6f, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52,
	0x0f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x42, 0x12, 0x0a, 0x10,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xbd, 0x02, 0x0a, 0x0f,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x75, 0x74, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x75,
	0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x73, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0xb2, 0x05, 0x0a, 0x0d, 0x44, 0x65, 0x6d, 0x6f, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x01, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x04, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x73,
	0x70, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x07,
	0x73, 0x70, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x06, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x07, 0x52, 0x09, 0x70, 0x61, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x61, 0x79,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x48, 0x08,
	0x52, 0x0a, 0x70, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x1e, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x2d, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0e, 0x70, 0x61, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27,
	0x0a, 0x0d, 0x70, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x04, 0x48, 0x0b, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0c, 0x52,
	0x0b, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x70, 0x75, 0x49, 0x64, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x70, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x15, 0x50, 0x61, 0x79,
	0x44, 0x65, 0x6d, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70,
	0x75, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x70, 0x22, 0xd3, 0x08, 0x0a, 0x0a, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x01, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x22, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x13, 0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52,
	0x02, 0x6e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x06, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x07, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x2f,
	0x0a, 0x11, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0f, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x31, 0x0a, 0x12, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x10, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0a, 0x52, 0x08, 0x70, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0b, 0x52, 0x0b, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x70, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0e, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0f, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x48, 0x10, 0x52,
	0x0b, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x31, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x10, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x12, 0x52,
	0x0f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67,
	0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x13, 0x52, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x6e, 0x6f, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x42, 0x15, 0x0a, 0x13, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x79, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x6e, 0x6f, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x19,
	0x0a, 0x07, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x0c, 0x42, 0x61, 0x73,
	0x65, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x43, 0x0a, 0x10, 0x44,
	0x65, 0x6d, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x4b, 0x0a, 0x17, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6d, 0x6f, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x61, 0x79, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x70, 0x61, 0x79, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x22, 0xdd, 0x05,
	0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x02, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x48, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x13,
	0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x02, 0x6e, 0x6f,
	0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x48, 0x05, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0b, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x70, 0x88, 0x01, 0x01, 0x12, 0x51, 0x0a, 0x0e, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x12, 0x31, 0x0a, 0x12,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x10, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x2f, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6d, 0x73, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0f, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01,
	0x12, 0x33, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52,
	0x11, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x88, 0x01, 0x01, 0x1a, 0x40, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x6e, 0x6f, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42,
	0x14, 0x0a, 0x12, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x73, 0x67, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdd, 0x02,
	0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x25, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x0f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x88,
	0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x02, 0x6e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x04, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x43, 0x6f, 0x64, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x42, 0x05, 0x0a, 0x03, 0x5f,
	0x6e, 0x6f, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x22, 0x0a,
	0x0a, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0xae, 0x02, 0x0a, 0x17, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x55, 0x0a, 0x0d, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x50, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x50,
	0x1a, 0x40, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x1c, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x3e, 0x0a, 0x0b, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x63, 0x0a, 0x11, 0x44, 0x65, 0x6d, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x0d, 0x64,
	0x65, 0x6d, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x44, 0x65, 0x6d, 0x6f, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x64, 0x65, 0x6d, 0x6f, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x1b, 0x0a, 0x07, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x73, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x49, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa0, 0x01,
	0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0b, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x2b, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0e, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x27, 0x0a, 0x0f, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x94, 0x08, 0x0a, 0x09, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x01, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x22, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x08, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a,
	0x10, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x48, 0x09, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0a, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x46, 0x65, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x70, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x0c, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0d, 0x52, 0x0b, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0e,
	0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x26, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x04, 0x48, 0x0f, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x02, 0x6e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x11, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x12, 0x52,
	0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x2d, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x13, 0x52, 0x0e, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x88, 0x01, 0x01,
	0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42,
	0x05, 0x0a, 0x03, 0x5f, 0x6e, 0x6f, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f,
	0x22, 0xe4, 0x01, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x55, 0x72, 0x6c, 0x22, 0x17, 0x0a, 0x05, 0x4e, 0x6f, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x6f,
	0x22, 0x32, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x0c, 0x0a, 0x01, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x17, 0x0a, 0x05, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1a, 0x0a,
	0x06, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2e, 0x0a, 0x0a, 0x42, 0x61, 0x73,
	0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x1c, 0x0a, 0x08, 0x55, 0x55, 0x49,
	0x44, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x48, 0x0a, 0x16, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x6d, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x69, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x2a, 0x76, 0x0a, 0x09, 0x50, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x12, 0x50, 0x41, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x41, 0x59, 0x5f, 0x57, 0x41,
	0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x41, 0x59, 0x5f, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x41, 0x59, 0x5f,
	0x52, 0x45, 0x46, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x41, 0x59, 0x5f,
	0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x41, 0x59, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x05, 0x2a, 0x3e, 0x0a, 0x07, 0x50, 0x61, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x41, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x41,
	0x59, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x41, 0x59,
	0x5f, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x10, 0x02, 0x2a, 0x8a, 0x01, 0x0a, 0x0a, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x57, 0x78, 0x50, 0x75, 0x62, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x78, 0x4c, 0x69, 0x74,
	0x65, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x78, 0x41, 0x70, 0x70, 0x10, 0x03, 0x12, 0x0c,
	0x0a, 0x08, 0x57, 0x78, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08,
	0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x50, 0x63, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x6c,
	0x69, 0x70, 0x61, 0x79, 0x57, 0x61, 0x70, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x6c, 0x69,
	0x70, 0x61, 0x79, 0x51, 0x72, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x6c, 0x69, 0x70, 0x61,
	0x79, 0x42, 0x61, 0x72, 0x10, 0x08, 0x2a, 0x3b, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xf4, 0x03, 0x12, 0x17, 0x0a, 0x10, 0x54, 0x52,
	0x41, 0x44, 0x45, 0x5f, 0x55, 0x55, 0x49, 0x44, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0xc3,
	0x9f, 0xab, 0x03, 0x32, 0xff, 0x07, 0x0a, 0x03, 0x50, 0x61, 0x79, 0x12, 0x29, 0x0a, 0x0c, 0x69,
	0x6e, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x0a, 0x2e, 0x70, 0x61,
	0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0d, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x6d, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x70, 0x61, 0x79, 0x2e,
	0x50, 0x61, 0x79, 0x44, 0x65, 0x6d, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x44, 0x65, 0x6d,
	0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0a, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x44, 0x65, 0x6d, 0x6f, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x65, 0x6d, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x70, 0x61, 0x79,
	0x2e, 0x44, 0x65, 0x6d, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x44, 0x65, 0x6d, 0x6f, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x13, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x6d, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x69, 0x64,
	0x12, 0x1b, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6d,
	0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e,
	0x70, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0f,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x17, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x6d, 0x6f,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x6d, 0x6f, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x69, 0x64, 0x12,
	0x1c, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6d, 0x6f,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e,
	0x70, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x70, 0x61,
	0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x0f, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x26, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0a, 0x2e,
	0x70, 0x61, 0x79, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x70, 0x61, 0x79, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x0c, 0x67, 0x65, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x11, 0x2e, 0x70, 0x61, 0x79, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70,
	0x61, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x45, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x2e, 0x70,
	0x61, 0x79, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x31, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x13, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50, 0x61,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x61,
	0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x35, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x12, 0x14, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x2e, 0x70, 0x61, 0x79, 0x2e,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e,
	0x70, 0x61, 0x79, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2c, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x0a, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a,
	0x0f, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x33, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x12, 0x14, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x70, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x70, 0x61, 0x79, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pay_proto_rawDescOnce sync.Once
	file_pay_proto_rawDescData = file_pay_proto_rawDesc
)

func file_pay_proto_rawDescGZIP() []byte {
	file_pay_proto_rawDescOnce.Do(func() {
		file_pay_proto_rawDescData = protoimpl.X.CompressGZIP(file_pay_proto_rawDescData)
	})
	return file_pay_proto_rawDescData
}

var file_pay_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_pay_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_pay_proto_goTypes = []interface{}{
	(PayStatus)(0),                  // 0: pay.PayStatus
	(PayType)(0),                    // 1: pay.PayType
	(PayChannel)(0),                 // 2: pay.PayChannel
	(RetCode)(0),                    // 3: pay.RetCode
	(*RefundPageResp)(nil),          // 4: pay.RefundPageResp
	(*RefundDemoOrderReq)(nil),      // 5: pay.RefundDemoOrderReq
	(*OrderSubmitReq)(nil),          // 6: pay.OrderSubmitReq
	(*RefundCreateReq)(nil),         // 7: pay.RefundCreateReq
	(*RefundPageReq)(nil),           // 8: pay.RefundPageReq
	(*NotifyRefundReq)(nil),         // 9: pay.NotifyRefundReq
	(*Empty)(nil),                   // 10: pay.Empty
	(*DemoOrderInfo)(nil),           // 11: pay.DemoOrderInfo
	(*PayDemoOrderCreateReq)(nil),   // 12: pay.PayDemoOrderCreateReq
	(*RefundInfo)(nil),              // 13: pay.RefundInfo
	(*UUIDReq)(nil),                 // 14: pay.UUIDReq
	(*BaseUUIDResp)(nil),            // 15: pay.BaseUUIDResp
	(*DemoOrderPageReq)(nil),        // 16: pay.DemoOrderPageReq
	(*UpdateDemoRefundPaidReq)(nil), // 17: pay.updateDemoRefundPaidReq
	(*OrderExtensionInfo)(nil),      // 18: pay.OrderExtensionInfo
	(*OrderPageReq)(nil),            // 19: pay.OrderPageReq
	(*StringList)(nil),              // 20: pay.StringList
	(*OrderCreateExtensionReq)(nil), // 21: pay.OrderCreateExtensionReq
	(*BaseResp)(nil),                // 22: pay.BaseResp
	(*PageInfoReq)(nil),             // 23: pay.PageInfoReq
	(*DemoOrderListResp)(nil),       // 24: pay.DemoOrderListResp
	(*BaseMsg)(nil),                 // 25: pay.BaseMsg
	(*OrderListResp)(nil),           // 26: pay.OrderListResp
	(*OrderSubmitResp)(nil),         // 27: pay.OrderSubmitResp
	(*RefundCountResp)(nil),         // 28: pay.RefundCountResp
	(*OrderInfo)(nil),               // 29: pay.OrderInfo
	(*OrderCreateReq)(nil),          // 30: pay.OrderCreateReq
	(*NoReq)(nil),                   // 31: pay.NoReq
	(*NotifyOrderReq)(nil),          // 32: pay.NotifyOrderReq
	(*IDReq)(nil),                   // 33: pay.IDReq
	(*IDsReq)(nil),                  // 34: pay.IDsReq
	(*BaseIDResp)(nil),              // 35: pay.BaseIDResp
	(*UUIDsReq)(nil),                // 36: pay.UUIDsReq
	(*UpdateDemoOrderPaidReq)(nil),  // 37: pay.updateDemoOrderPaidReq
	nil,                             // 38: pay.OrderSubmitReq.ChannelExtrasEntry
	nil,                             // 39: pay.OrderExtensionInfo.ChannelExtrasEntry
	nil,                             // 40: pay.OrderCreateExtensionReq.ChannelExtrasEntry
}
var file_pay_proto_depIdxs = []int32{
	13, // 0: pay.RefundPageResp.data:type_name -> pay.RefundInfo
	38, // 1: pay.OrderSubmitReq.ChannelExtras:type_name -> pay.OrderSubmitReq.ChannelExtrasEntry
	39, // 2: pay.OrderExtensionInfo.channel_extras:type_name -> pay.OrderExtensionInfo.ChannelExtrasEntry
	40, // 3: pay.OrderCreateExtensionReq.channelExtras:type_name -> pay.OrderCreateExtensionReq.ChannelExtrasEntry
	11, // 4: pay.DemoOrderListResp.demoOrderList:type_name -> pay.DemoOrderInfo
	29, // 5: pay.OrderListResp.data:type_name -> pay.OrderInfo
	10, // 6: pay.Pay.initDatabase:input_type -> pay.Empty
	12, // 7: pay.Pay.createDemoOrder:input_type -> pay.PayDemoOrderCreateReq
	33, // 8: pay.Pay.getDemoOrder:input_type -> pay.IDReq
	16, // 9: pay.Pay.getListDemoOrder:input_type -> pay.DemoOrderPageReq
	37, // 10: pay.Pay.updateDemoOrderPaid:input_type -> pay.updateDemoOrderPaidReq
	5,  // 11: pay.Pay.refundDemoOrder:input_type -> pay.RefundDemoOrderReq
	17, // 12: pay.Pay.updateDemoRefundPaid:input_type -> pay.updateDemoRefundPaidReq
	30, // 13: pay.Pay.createOrder:input_type -> pay.OrderCreateReq
	33, // 14: pay.Pay.getOrder:input_type -> pay.IDReq
	19, // 15: pay.Pay.getOrderPage:input_type -> pay.OrderPageReq
	21, // 16: pay.Pay.createOrderExtension:input_type -> pay.OrderCreateExtensionReq
	33, // 17: pay.Pay.getOrderExtension:input_type -> pay.IDReq
	32, // 18: pay.Pay.notifyOrder:input_type -> pay.NotifyOrderReq
	6,  // 19: pay.Pay.submitPayOrder:input_type -> pay.OrderSubmitReq
	7,  // 20: pay.Pay.createRefund:input_type -> pay.RefundCreateReq
	8,  // 21: pay.Pay.getRefundPage:input_type -> pay.RefundPageReq
	33, // 22: pay.Pay.getRefundById:input_type -> pay.IDReq
	9,  // 23: pay.Pay.notifyRefund:input_type -> pay.NotifyRefundReq
	22, // 24: pay.Pay.initDatabase:output_type -> pay.BaseResp
	35, // 25: pay.Pay.createDemoOrder:output_type -> pay.BaseIDResp
	11, // 26: pay.Pay.getDemoOrder:output_type -> pay.DemoOrderInfo
	24, // 27: pay.Pay.getListDemoOrder:output_type -> pay.DemoOrderListResp
	22, // 28: pay.Pay.updateDemoOrderPaid:output_type -> pay.BaseResp
	22, // 29: pay.Pay.refundDemoOrder:output_type -> pay.BaseResp
	22, // 30: pay.Pay.updateDemoRefundPaid:output_type -> pay.BaseResp
	35, // 31: pay.Pay.createOrder:output_type -> pay.BaseIDResp
	29, // 32: pay.Pay.getOrder:output_type -> pay.OrderInfo
	26, // 33: pay.Pay.getOrderPage:output_type -> pay.OrderListResp
	35, // 34: pay.Pay.createOrderExtension:output_type -> pay.BaseIDResp
	18, // 35: pay.Pay.getOrderExtension:output_type -> pay.OrderExtensionInfo
	22, // 36: pay.Pay.notifyOrder:output_type -> pay.BaseResp
	27, // 37: pay.Pay.submitPayOrder:output_type -> pay.OrderSubmitResp
	35, // 38: pay.Pay.createRefund:output_type -> pay.BaseIDResp
	4,  // 39: pay.Pay.getRefundPage:output_type -> pay.RefundPageResp
	13, // 40: pay.Pay.getRefundById:output_type -> pay.RefundInfo
	22, // 41: pay.Pay.notifyRefund:output_type -> pay.BaseResp
	24, // [24:42] is the sub-list for method output_type
	6,  // [6:24] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_pay_proto_init() }
func file_pay_proto_init() {
	if File_pay_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pay_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundPageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundDemoOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderSubmitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRefundReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DemoOrderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayDemoOrderCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UUIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseUUIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DemoOrderPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDemoRefundPaidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderExtensionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreateExtensionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DemoOrderListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderSubmitResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UUIDsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDemoOrderPaidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pay_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_pay_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_pay_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_pay_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_pay_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_pay_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_pay_proto_msgTypes[25].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pay_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pay_proto_goTypes,
		DependencyIndexes: file_pay_proto_depIdxs,
		EnumInfos:         file_pay_proto_enumTypes,
		MessageInfos:      file_pay_proto_msgTypes,
	}.Build()
	File_pay_proto = out.File
	file_pay_proto_rawDesc = nil
	file_pay_proto_goTypes = nil
	file_pay_proto_depIdxs = nil
}
