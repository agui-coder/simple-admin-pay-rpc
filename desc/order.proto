syntax = "proto3";

// Order message

message OrderInfo {
  optional uint64 id = 1;
  optional int64 created_at = 2;
  optional int64 updated_at = 3;
  optional uint32 status = 4;
  optional string channel_code = 5;
  optional string merchant_order_id = 6;
  optional string subject = 7;
  optional string body = 8;
  optional int32 price = 9;
  optional double channel_fee_rate = 10;
  optional int32 channel_fee_price = 11;
  optional string user_ip = 12;
  optional int64  expire_time = 13;
  optional int64  success_time = 14;
  optional int64  notify_time = 15;
  optional uint64 extension_id = 16;
  optional string no = 17;
  optional int32 refund_price = 18;
  optional string channel_user_id = 19;
  optional string channel_order_no = 20;
}

message OrderExtensionInfo {
  optional uint64 id = 1;
  optional int64 created_at = 2;
  optional int64 updated_at = 3;
  optional uint32 status = 4;
  optional string no = 5;
  optional uint64 order_id = 6;
  optional string channel_code = 8;
  optional string user_ip = 9;
  map<string,string> channel_extras = 10;
  optional string channel_error_code = 11;
  optional string channel_error_msg = 12;
  optional string channel_notify_data = 13;
}

message OrderCreateReq {
  string userIp = 2;
  string merchantOrderId =3;
  string subject =4;
  string body = 5;
  int32 price =6;
  int64 expireTime =7;
  string notifyBusinessUrl = 8;
}

message OrderPageReq {
  uint64 page = 1;
  uint64 page_size = 2;
  optional string channelCode =4;
  optional string merchantOrderId =5;
  optional string channelOrderNo =6;
  optional string no = 7;
  optional uint32 status = 8;
  repeated int64 createTime = 9;
}

message OrderListResp {
  uint64 total = 1;
  repeated OrderInfo data = 2;
}
message NoReq{
  string no = 1;
}

message StringList {
  repeated string items = 1;
}

message NotifyOrderReq {
  bytes r   = 1;
  string code =2;
}


message OrderCreateExtensionReq {
  uint64 orderID = 1;
  string channelCode = 2;
  map<string,string> channelExtras =3;
  string no =4;
  uint32 status =6;
  string userIP =7;
}

message OrderSubmitReq {
  uint64  Id = 1;
  string ChannelCode =2;
  map<string,string>  ChannelExtras =3;
  string  DisplayMode = 4;
  string  ReturnUrl  =5;
  string UserIP = 6;
}

message OrderSubmitResp {
    uint32 Status = 1;
  optional string DisplayMode =2;
  optional string DisplayContent =3;
}

service Pay {

  // Order management
  // group: order
  rpc createOrder (OrderCreateReq) returns (BaseIDResp);
  // group: order
  rpc getOrder (IDReq)returns(OrderInfo);
  // group: order
  rpc getOrderPage (OrderPageReq) returns(OrderListResp);
  // group: order
  rpc createOrderExtension (OrderCreateExtensionReq) returns(BaseIDResp);
  // group: order
  rpc getOrderExtension(IDReq) returns(OrderExtensionInfo);
  // group: order
  rpc notifyOrder(NotifyOrderReq) returns(BaseResp);
  // group: order
  rpc submitPayOrder(OrderSubmitReq) returns(OrderSubmitResp);
}