// Code generated by ent, DO NOT EDIT.

package refund

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/agui-coder/simple-admin-pay-rpc/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uint64) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint64) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint64) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint64) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint64) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint64) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint64) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint64) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint64) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldUpdatedAt, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v uint8) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldStatus, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldDeletedAt, v))
}

// No applies equality check predicate on the "no" field. It's identical to NoEQ.
func No(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldNo, v))
}

// ChannelCode applies equality check predicate on the "channel_code" field. It's identical to ChannelCodeEQ.
func ChannelCode(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldChannelCode, v))
}

// OrderID applies equality check predicate on the "order_id" field. It's identical to OrderIDEQ.
func OrderID(v uint64) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldOrderID, v))
}

// OrderNo applies equality check predicate on the "order_no" field. It's identical to OrderNoEQ.
func OrderNo(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldOrderNo, v))
}

// MerchantOrderID applies equality check predicate on the "merchant_order_id" field. It's identical to MerchantOrderIDEQ.
func MerchantOrderID(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldMerchantOrderID, v))
}

// MerchantRefundID applies equality check predicate on the "merchant_refund_id" field. It's identical to MerchantRefundIDEQ.
func MerchantRefundID(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldMerchantRefundID, v))
}

// NotifyURL applies equality check predicate on the "notify_url" field. It's identical to NotifyURLEQ.
func NotifyURL(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldNotifyURL, v))
}

// PayPrice applies equality check predicate on the "pay_price" field. It's identical to PayPriceEQ.
func PayPrice(v int32) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldPayPrice, v))
}

// RefundPrice applies equality check predicate on the "refund_price" field. It's identical to RefundPriceEQ.
func RefundPrice(v int32) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldRefundPrice, v))
}

// Reason applies equality check predicate on the "reason" field. It's identical to ReasonEQ.
func Reason(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldReason, v))
}

// UserIP applies equality check predicate on the "user_ip" field. It's identical to UserIPEQ.
func UserIP(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldUserIP, v))
}

// ChannelOrderNo applies equality check predicate on the "channel_order_no" field. It's identical to ChannelOrderNoEQ.
func ChannelOrderNo(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldChannelOrderNo, v))
}

// ChannelRefundNo applies equality check predicate on the "channel_refund_no" field. It's identical to ChannelRefundNoEQ.
func ChannelRefundNo(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldChannelRefundNo, v))
}

// SuccessTime applies equality check predicate on the "success_time" field. It's identical to SuccessTimeEQ.
func SuccessTime(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldSuccessTime, v))
}

// ChannelErrorCode applies equality check predicate on the "channel_error_code" field. It's identical to ChannelErrorCodeEQ.
func ChannelErrorCode(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldChannelErrorCode, v))
}

// ChannelErrorMsg applies equality check predicate on the "channel_error_msg" field. It's identical to ChannelErrorMsgEQ.
func ChannelErrorMsg(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldChannelErrorMsg, v))
}

// ChannelNotifyData applies equality check predicate on the "channel_notify_data" field. It's identical to ChannelNotifyDataEQ.
func ChannelNotifyData(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldChannelNotifyData, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldUpdatedAt, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v uint8) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v uint8) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...uint8) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...uint8) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v uint8) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v uint8) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v uint8) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v uint8) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldStatus, v))
}

// StatusIsNil applies the IsNil predicate on the "status" field.
func StatusIsNil() predicate.Refund {
	return predicate.Refund(sql.FieldIsNull(FieldStatus))
}

// StatusNotNil applies the NotNil predicate on the "status" field.
func StatusNotNil() predicate.Refund {
	return predicate.Refund(sql.FieldNotNull(FieldStatus))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.Refund {
	return predicate.Refund(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.Refund {
	return predicate.Refund(sql.FieldNotNull(FieldDeletedAt))
}

// NoEQ applies the EQ predicate on the "no" field.
func NoEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldNo, v))
}

// NoNEQ applies the NEQ predicate on the "no" field.
func NoNEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldNo, v))
}

// NoIn applies the In predicate on the "no" field.
func NoIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldNo, vs...))
}

// NoNotIn applies the NotIn predicate on the "no" field.
func NoNotIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldNo, vs...))
}

// NoGT applies the GT predicate on the "no" field.
func NoGT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldNo, v))
}

// NoGTE applies the GTE predicate on the "no" field.
func NoGTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldNo, v))
}

// NoLT applies the LT predicate on the "no" field.
func NoLT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldNo, v))
}

// NoLTE applies the LTE predicate on the "no" field.
func NoLTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldNo, v))
}

// NoContains applies the Contains predicate on the "no" field.
func NoContains(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContains(FieldNo, v))
}

// NoHasPrefix applies the HasPrefix predicate on the "no" field.
func NoHasPrefix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasPrefix(FieldNo, v))
}

// NoHasSuffix applies the HasSuffix predicate on the "no" field.
func NoHasSuffix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasSuffix(FieldNo, v))
}

// NoEqualFold applies the EqualFold predicate on the "no" field.
func NoEqualFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEqualFold(FieldNo, v))
}

// NoContainsFold applies the ContainsFold predicate on the "no" field.
func NoContainsFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContainsFold(FieldNo, v))
}

// ChannelCodeEQ applies the EQ predicate on the "channel_code" field.
func ChannelCodeEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldChannelCode, v))
}

// ChannelCodeNEQ applies the NEQ predicate on the "channel_code" field.
func ChannelCodeNEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldChannelCode, v))
}

// ChannelCodeIn applies the In predicate on the "channel_code" field.
func ChannelCodeIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldChannelCode, vs...))
}

// ChannelCodeNotIn applies the NotIn predicate on the "channel_code" field.
func ChannelCodeNotIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldChannelCode, vs...))
}

// ChannelCodeGT applies the GT predicate on the "channel_code" field.
func ChannelCodeGT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldChannelCode, v))
}

// ChannelCodeGTE applies the GTE predicate on the "channel_code" field.
func ChannelCodeGTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldChannelCode, v))
}

// ChannelCodeLT applies the LT predicate on the "channel_code" field.
func ChannelCodeLT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldChannelCode, v))
}

// ChannelCodeLTE applies the LTE predicate on the "channel_code" field.
func ChannelCodeLTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldChannelCode, v))
}

// ChannelCodeContains applies the Contains predicate on the "channel_code" field.
func ChannelCodeContains(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContains(FieldChannelCode, v))
}

// ChannelCodeHasPrefix applies the HasPrefix predicate on the "channel_code" field.
func ChannelCodeHasPrefix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasPrefix(FieldChannelCode, v))
}

// ChannelCodeHasSuffix applies the HasSuffix predicate on the "channel_code" field.
func ChannelCodeHasSuffix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasSuffix(FieldChannelCode, v))
}

// ChannelCodeEqualFold applies the EqualFold predicate on the "channel_code" field.
func ChannelCodeEqualFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEqualFold(FieldChannelCode, v))
}

// ChannelCodeContainsFold applies the ContainsFold predicate on the "channel_code" field.
func ChannelCodeContainsFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContainsFold(FieldChannelCode, v))
}

// OrderIDEQ applies the EQ predicate on the "order_id" field.
func OrderIDEQ(v uint64) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldOrderID, v))
}

// OrderIDNEQ applies the NEQ predicate on the "order_id" field.
func OrderIDNEQ(v uint64) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldOrderID, v))
}

// OrderIDIn applies the In predicate on the "order_id" field.
func OrderIDIn(vs ...uint64) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldOrderID, vs...))
}

// OrderIDNotIn applies the NotIn predicate on the "order_id" field.
func OrderIDNotIn(vs ...uint64) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldOrderID, vs...))
}

// OrderIDGT applies the GT predicate on the "order_id" field.
func OrderIDGT(v uint64) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldOrderID, v))
}

// OrderIDGTE applies the GTE predicate on the "order_id" field.
func OrderIDGTE(v uint64) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldOrderID, v))
}

// OrderIDLT applies the LT predicate on the "order_id" field.
func OrderIDLT(v uint64) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldOrderID, v))
}

// OrderIDLTE applies the LTE predicate on the "order_id" field.
func OrderIDLTE(v uint64) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldOrderID, v))
}

// OrderNoEQ applies the EQ predicate on the "order_no" field.
func OrderNoEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldOrderNo, v))
}

// OrderNoNEQ applies the NEQ predicate on the "order_no" field.
func OrderNoNEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldOrderNo, v))
}

// OrderNoIn applies the In predicate on the "order_no" field.
func OrderNoIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldOrderNo, vs...))
}

// OrderNoNotIn applies the NotIn predicate on the "order_no" field.
func OrderNoNotIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldOrderNo, vs...))
}

// OrderNoGT applies the GT predicate on the "order_no" field.
func OrderNoGT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldOrderNo, v))
}

// OrderNoGTE applies the GTE predicate on the "order_no" field.
func OrderNoGTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldOrderNo, v))
}

// OrderNoLT applies the LT predicate on the "order_no" field.
func OrderNoLT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldOrderNo, v))
}

// OrderNoLTE applies the LTE predicate on the "order_no" field.
func OrderNoLTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldOrderNo, v))
}

// OrderNoContains applies the Contains predicate on the "order_no" field.
func OrderNoContains(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContains(FieldOrderNo, v))
}

// OrderNoHasPrefix applies the HasPrefix predicate on the "order_no" field.
func OrderNoHasPrefix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasPrefix(FieldOrderNo, v))
}

// OrderNoHasSuffix applies the HasSuffix predicate on the "order_no" field.
func OrderNoHasSuffix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasSuffix(FieldOrderNo, v))
}

// OrderNoEqualFold applies the EqualFold predicate on the "order_no" field.
func OrderNoEqualFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEqualFold(FieldOrderNo, v))
}

// OrderNoContainsFold applies the ContainsFold predicate on the "order_no" field.
func OrderNoContainsFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContainsFold(FieldOrderNo, v))
}

// MerchantOrderIDEQ applies the EQ predicate on the "merchant_order_id" field.
func MerchantOrderIDEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldMerchantOrderID, v))
}

// MerchantOrderIDNEQ applies the NEQ predicate on the "merchant_order_id" field.
func MerchantOrderIDNEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldMerchantOrderID, v))
}

// MerchantOrderIDIn applies the In predicate on the "merchant_order_id" field.
func MerchantOrderIDIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldMerchantOrderID, vs...))
}

// MerchantOrderIDNotIn applies the NotIn predicate on the "merchant_order_id" field.
func MerchantOrderIDNotIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldMerchantOrderID, vs...))
}

// MerchantOrderIDGT applies the GT predicate on the "merchant_order_id" field.
func MerchantOrderIDGT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldMerchantOrderID, v))
}

// MerchantOrderIDGTE applies the GTE predicate on the "merchant_order_id" field.
func MerchantOrderIDGTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldMerchantOrderID, v))
}

// MerchantOrderIDLT applies the LT predicate on the "merchant_order_id" field.
func MerchantOrderIDLT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldMerchantOrderID, v))
}

// MerchantOrderIDLTE applies the LTE predicate on the "merchant_order_id" field.
func MerchantOrderIDLTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldMerchantOrderID, v))
}

// MerchantOrderIDContains applies the Contains predicate on the "merchant_order_id" field.
func MerchantOrderIDContains(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContains(FieldMerchantOrderID, v))
}

// MerchantOrderIDHasPrefix applies the HasPrefix predicate on the "merchant_order_id" field.
func MerchantOrderIDHasPrefix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasPrefix(FieldMerchantOrderID, v))
}

// MerchantOrderIDHasSuffix applies the HasSuffix predicate on the "merchant_order_id" field.
func MerchantOrderIDHasSuffix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasSuffix(FieldMerchantOrderID, v))
}

// MerchantOrderIDEqualFold applies the EqualFold predicate on the "merchant_order_id" field.
func MerchantOrderIDEqualFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEqualFold(FieldMerchantOrderID, v))
}

// MerchantOrderIDContainsFold applies the ContainsFold predicate on the "merchant_order_id" field.
func MerchantOrderIDContainsFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContainsFold(FieldMerchantOrderID, v))
}

// MerchantRefundIDEQ applies the EQ predicate on the "merchant_refund_id" field.
func MerchantRefundIDEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldMerchantRefundID, v))
}

// MerchantRefundIDNEQ applies the NEQ predicate on the "merchant_refund_id" field.
func MerchantRefundIDNEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldMerchantRefundID, v))
}

// MerchantRefundIDIn applies the In predicate on the "merchant_refund_id" field.
func MerchantRefundIDIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldMerchantRefundID, vs...))
}

// MerchantRefundIDNotIn applies the NotIn predicate on the "merchant_refund_id" field.
func MerchantRefundIDNotIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldMerchantRefundID, vs...))
}

// MerchantRefundIDGT applies the GT predicate on the "merchant_refund_id" field.
func MerchantRefundIDGT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldMerchantRefundID, v))
}

// MerchantRefundIDGTE applies the GTE predicate on the "merchant_refund_id" field.
func MerchantRefundIDGTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldMerchantRefundID, v))
}

// MerchantRefundIDLT applies the LT predicate on the "merchant_refund_id" field.
func MerchantRefundIDLT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldMerchantRefundID, v))
}

// MerchantRefundIDLTE applies the LTE predicate on the "merchant_refund_id" field.
func MerchantRefundIDLTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldMerchantRefundID, v))
}

// MerchantRefundIDContains applies the Contains predicate on the "merchant_refund_id" field.
func MerchantRefundIDContains(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContains(FieldMerchantRefundID, v))
}

// MerchantRefundIDHasPrefix applies the HasPrefix predicate on the "merchant_refund_id" field.
func MerchantRefundIDHasPrefix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasPrefix(FieldMerchantRefundID, v))
}

// MerchantRefundIDHasSuffix applies the HasSuffix predicate on the "merchant_refund_id" field.
func MerchantRefundIDHasSuffix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasSuffix(FieldMerchantRefundID, v))
}

// MerchantRefundIDEqualFold applies the EqualFold predicate on the "merchant_refund_id" field.
func MerchantRefundIDEqualFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEqualFold(FieldMerchantRefundID, v))
}

// MerchantRefundIDContainsFold applies the ContainsFold predicate on the "merchant_refund_id" field.
func MerchantRefundIDContainsFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContainsFold(FieldMerchantRefundID, v))
}

// NotifyURLEQ applies the EQ predicate on the "notify_url" field.
func NotifyURLEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldNotifyURL, v))
}

// NotifyURLNEQ applies the NEQ predicate on the "notify_url" field.
func NotifyURLNEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldNotifyURL, v))
}

// NotifyURLIn applies the In predicate on the "notify_url" field.
func NotifyURLIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldNotifyURL, vs...))
}

// NotifyURLNotIn applies the NotIn predicate on the "notify_url" field.
func NotifyURLNotIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldNotifyURL, vs...))
}

// NotifyURLGT applies the GT predicate on the "notify_url" field.
func NotifyURLGT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldNotifyURL, v))
}

// NotifyURLGTE applies the GTE predicate on the "notify_url" field.
func NotifyURLGTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldNotifyURL, v))
}

// NotifyURLLT applies the LT predicate on the "notify_url" field.
func NotifyURLLT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldNotifyURL, v))
}

// NotifyURLLTE applies the LTE predicate on the "notify_url" field.
func NotifyURLLTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldNotifyURL, v))
}

// NotifyURLContains applies the Contains predicate on the "notify_url" field.
func NotifyURLContains(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContains(FieldNotifyURL, v))
}

// NotifyURLHasPrefix applies the HasPrefix predicate on the "notify_url" field.
func NotifyURLHasPrefix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasPrefix(FieldNotifyURL, v))
}

// NotifyURLHasSuffix applies the HasSuffix predicate on the "notify_url" field.
func NotifyURLHasSuffix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasSuffix(FieldNotifyURL, v))
}

// NotifyURLEqualFold applies the EqualFold predicate on the "notify_url" field.
func NotifyURLEqualFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEqualFold(FieldNotifyURL, v))
}

// NotifyURLContainsFold applies the ContainsFold predicate on the "notify_url" field.
func NotifyURLContainsFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContainsFold(FieldNotifyURL, v))
}

// PayPriceEQ applies the EQ predicate on the "pay_price" field.
func PayPriceEQ(v int32) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldPayPrice, v))
}

// PayPriceNEQ applies the NEQ predicate on the "pay_price" field.
func PayPriceNEQ(v int32) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldPayPrice, v))
}

// PayPriceIn applies the In predicate on the "pay_price" field.
func PayPriceIn(vs ...int32) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldPayPrice, vs...))
}

// PayPriceNotIn applies the NotIn predicate on the "pay_price" field.
func PayPriceNotIn(vs ...int32) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldPayPrice, vs...))
}

// PayPriceGT applies the GT predicate on the "pay_price" field.
func PayPriceGT(v int32) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldPayPrice, v))
}

// PayPriceGTE applies the GTE predicate on the "pay_price" field.
func PayPriceGTE(v int32) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldPayPrice, v))
}

// PayPriceLT applies the LT predicate on the "pay_price" field.
func PayPriceLT(v int32) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldPayPrice, v))
}

// PayPriceLTE applies the LTE predicate on the "pay_price" field.
func PayPriceLTE(v int32) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldPayPrice, v))
}

// RefundPriceEQ applies the EQ predicate on the "refund_price" field.
func RefundPriceEQ(v int32) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldRefundPrice, v))
}

// RefundPriceNEQ applies the NEQ predicate on the "refund_price" field.
func RefundPriceNEQ(v int32) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldRefundPrice, v))
}

// RefundPriceIn applies the In predicate on the "refund_price" field.
func RefundPriceIn(vs ...int32) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldRefundPrice, vs...))
}

// RefundPriceNotIn applies the NotIn predicate on the "refund_price" field.
func RefundPriceNotIn(vs ...int32) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldRefundPrice, vs...))
}

// RefundPriceGT applies the GT predicate on the "refund_price" field.
func RefundPriceGT(v int32) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldRefundPrice, v))
}

// RefundPriceGTE applies the GTE predicate on the "refund_price" field.
func RefundPriceGTE(v int32) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldRefundPrice, v))
}

// RefundPriceLT applies the LT predicate on the "refund_price" field.
func RefundPriceLT(v int32) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldRefundPrice, v))
}

// RefundPriceLTE applies the LTE predicate on the "refund_price" field.
func RefundPriceLTE(v int32) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldRefundPrice, v))
}

// ReasonEQ applies the EQ predicate on the "reason" field.
func ReasonEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldReason, v))
}

// ReasonNEQ applies the NEQ predicate on the "reason" field.
func ReasonNEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldReason, v))
}

// ReasonIn applies the In predicate on the "reason" field.
func ReasonIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldReason, vs...))
}

// ReasonNotIn applies the NotIn predicate on the "reason" field.
func ReasonNotIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldReason, vs...))
}

// ReasonGT applies the GT predicate on the "reason" field.
func ReasonGT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldReason, v))
}

// ReasonGTE applies the GTE predicate on the "reason" field.
func ReasonGTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldReason, v))
}

// ReasonLT applies the LT predicate on the "reason" field.
func ReasonLT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldReason, v))
}

// ReasonLTE applies the LTE predicate on the "reason" field.
func ReasonLTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldReason, v))
}

// ReasonContains applies the Contains predicate on the "reason" field.
func ReasonContains(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContains(FieldReason, v))
}

// ReasonHasPrefix applies the HasPrefix predicate on the "reason" field.
func ReasonHasPrefix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasPrefix(FieldReason, v))
}

// ReasonHasSuffix applies the HasSuffix predicate on the "reason" field.
func ReasonHasSuffix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasSuffix(FieldReason, v))
}

// ReasonEqualFold applies the EqualFold predicate on the "reason" field.
func ReasonEqualFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEqualFold(FieldReason, v))
}

// ReasonContainsFold applies the ContainsFold predicate on the "reason" field.
func ReasonContainsFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContainsFold(FieldReason, v))
}

// UserIPEQ applies the EQ predicate on the "user_ip" field.
func UserIPEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldUserIP, v))
}

// UserIPNEQ applies the NEQ predicate on the "user_ip" field.
func UserIPNEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldUserIP, v))
}

// UserIPIn applies the In predicate on the "user_ip" field.
func UserIPIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldUserIP, vs...))
}

// UserIPNotIn applies the NotIn predicate on the "user_ip" field.
func UserIPNotIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldUserIP, vs...))
}

// UserIPGT applies the GT predicate on the "user_ip" field.
func UserIPGT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldUserIP, v))
}

// UserIPGTE applies the GTE predicate on the "user_ip" field.
func UserIPGTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldUserIP, v))
}

// UserIPLT applies the LT predicate on the "user_ip" field.
func UserIPLT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldUserIP, v))
}

// UserIPLTE applies the LTE predicate on the "user_ip" field.
func UserIPLTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldUserIP, v))
}

// UserIPContains applies the Contains predicate on the "user_ip" field.
func UserIPContains(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContains(FieldUserIP, v))
}

// UserIPHasPrefix applies the HasPrefix predicate on the "user_ip" field.
func UserIPHasPrefix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasPrefix(FieldUserIP, v))
}

// UserIPHasSuffix applies the HasSuffix predicate on the "user_ip" field.
func UserIPHasSuffix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasSuffix(FieldUserIP, v))
}

// UserIPIsNil applies the IsNil predicate on the "user_ip" field.
func UserIPIsNil() predicate.Refund {
	return predicate.Refund(sql.FieldIsNull(FieldUserIP))
}

// UserIPNotNil applies the NotNil predicate on the "user_ip" field.
func UserIPNotNil() predicate.Refund {
	return predicate.Refund(sql.FieldNotNull(FieldUserIP))
}

// UserIPEqualFold applies the EqualFold predicate on the "user_ip" field.
func UserIPEqualFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEqualFold(FieldUserIP, v))
}

// UserIPContainsFold applies the ContainsFold predicate on the "user_ip" field.
func UserIPContainsFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContainsFold(FieldUserIP, v))
}

// ChannelOrderNoEQ applies the EQ predicate on the "channel_order_no" field.
func ChannelOrderNoEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldChannelOrderNo, v))
}

// ChannelOrderNoNEQ applies the NEQ predicate on the "channel_order_no" field.
func ChannelOrderNoNEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldChannelOrderNo, v))
}

// ChannelOrderNoIn applies the In predicate on the "channel_order_no" field.
func ChannelOrderNoIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldChannelOrderNo, vs...))
}

// ChannelOrderNoNotIn applies the NotIn predicate on the "channel_order_no" field.
func ChannelOrderNoNotIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldChannelOrderNo, vs...))
}

// ChannelOrderNoGT applies the GT predicate on the "channel_order_no" field.
func ChannelOrderNoGT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldChannelOrderNo, v))
}

// ChannelOrderNoGTE applies the GTE predicate on the "channel_order_no" field.
func ChannelOrderNoGTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldChannelOrderNo, v))
}

// ChannelOrderNoLT applies the LT predicate on the "channel_order_no" field.
func ChannelOrderNoLT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldChannelOrderNo, v))
}

// ChannelOrderNoLTE applies the LTE predicate on the "channel_order_no" field.
func ChannelOrderNoLTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldChannelOrderNo, v))
}

// ChannelOrderNoContains applies the Contains predicate on the "channel_order_no" field.
func ChannelOrderNoContains(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContains(FieldChannelOrderNo, v))
}

// ChannelOrderNoHasPrefix applies the HasPrefix predicate on the "channel_order_no" field.
func ChannelOrderNoHasPrefix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasPrefix(FieldChannelOrderNo, v))
}

// ChannelOrderNoHasSuffix applies the HasSuffix predicate on the "channel_order_no" field.
func ChannelOrderNoHasSuffix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasSuffix(FieldChannelOrderNo, v))
}

// ChannelOrderNoEqualFold applies the EqualFold predicate on the "channel_order_no" field.
func ChannelOrderNoEqualFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEqualFold(FieldChannelOrderNo, v))
}

// ChannelOrderNoContainsFold applies the ContainsFold predicate on the "channel_order_no" field.
func ChannelOrderNoContainsFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContainsFold(FieldChannelOrderNo, v))
}

// ChannelRefundNoEQ applies the EQ predicate on the "channel_refund_no" field.
func ChannelRefundNoEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldChannelRefundNo, v))
}

// ChannelRefundNoNEQ applies the NEQ predicate on the "channel_refund_no" field.
func ChannelRefundNoNEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldChannelRefundNo, v))
}

// ChannelRefundNoIn applies the In predicate on the "channel_refund_no" field.
func ChannelRefundNoIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldChannelRefundNo, vs...))
}

// ChannelRefundNoNotIn applies the NotIn predicate on the "channel_refund_no" field.
func ChannelRefundNoNotIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldChannelRefundNo, vs...))
}

// ChannelRefundNoGT applies the GT predicate on the "channel_refund_no" field.
func ChannelRefundNoGT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldChannelRefundNo, v))
}

// ChannelRefundNoGTE applies the GTE predicate on the "channel_refund_no" field.
func ChannelRefundNoGTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldChannelRefundNo, v))
}

// ChannelRefundNoLT applies the LT predicate on the "channel_refund_no" field.
func ChannelRefundNoLT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldChannelRefundNo, v))
}

// ChannelRefundNoLTE applies the LTE predicate on the "channel_refund_no" field.
func ChannelRefundNoLTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldChannelRefundNo, v))
}

// ChannelRefundNoContains applies the Contains predicate on the "channel_refund_no" field.
func ChannelRefundNoContains(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContains(FieldChannelRefundNo, v))
}

// ChannelRefundNoHasPrefix applies the HasPrefix predicate on the "channel_refund_no" field.
func ChannelRefundNoHasPrefix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasPrefix(FieldChannelRefundNo, v))
}

// ChannelRefundNoHasSuffix applies the HasSuffix predicate on the "channel_refund_no" field.
func ChannelRefundNoHasSuffix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasSuffix(FieldChannelRefundNo, v))
}

// ChannelRefundNoIsNil applies the IsNil predicate on the "channel_refund_no" field.
func ChannelRefundNoIsNil() predicate.Refund {
	return predicate.Refund(sql.FieldIsNull(FieldChannelRefundNo))
}

// ChannelRefundNoNotNil applies the NotNil predicate on the "channel_refund_no" field.
func ChannelRefundNoNotNil() predicate.Refund {
	return predicate.Refund(sql.FieldNotNull(FieldChannelRefundNo))
}

// ChannelRefundNoEqualFold applies the EqualFold predicate on the "channel_refund_no" field.
func ChannelRefundNoEqualFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEqualFold(FieldChannelRefundNo, v))
}

// ChannelRefundNoContainsFold applies the ContainsFold predicate on the "channel_refund_no" field.
func ChannelRefundNoContainsFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContainsFold(FieldChannelRefundNo, v))
}

// SuccessTimeEQ applies the EQ predicate on the "success_time" field.
func SuccessTimeEQ(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldSuccessTime, v))
}

// SuccessTimeNEQ applies the NEQ predicate on the "success_time" field.
func SuccessTimeNEQ(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldSuccessTime, v))
}

// SuccessTimeIn applies the In predicate on the "success_time" field.
func SuccessTimeIn(vs ...time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldSuccessTime, vs...))
}

// SuccessTimeNotIn applies the NotIn predicate on the "success_time" field.
func SuccessTimeNotIn(vs ...time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldSuccessTime, vs...))
}

// SuccessTimeGT applies the GT predicate on the "success_time" field.
func SuccessTimeGT(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldSuccessTime, v))
}

// SuccessTimeGTE applies the GTE predicate on the "success_time" field.
func SuccessTimeGTE(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldSuccessTime, v))
}

// SuccessTimeLT applies the LT predicate on the "success_time" field.
func SuccessTimeLT(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldSuccessTime, v))
}

// SuccessTimeLTE applies the LTE predicate on the "success_time" field.
func SuccessTimeLTE(v time.Time) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldSuccessTime, v))
}

// SuccessTimeIsNil applies the IsNil predicate on the "success_time" field.
func SuccessTimeIsNil() predicate.Refund {
	return predicate.Refund(sql.FieldIsNull(FieldSuccessTime))
}

// SuccessTimeNotNil applies the NotNil predicate on the "success_time" field.
func SuccessTimeNotNil() predicate.Refund {
	return predicate.Refund(sql.FieldNotNull(FieldSuccessTime))
}

// ChannelErrorCodeEQ applies the EQ predicate on the "channel_error_code" field.
func ChannelErrorCodeEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldChannelErrorCode, v))
}

// ChannelErrorCodeNEQ applies the NEQ predicate on the "channel_error_code" field.
func ChannelErrorCodeNEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldChannelErrorCode, v))
}

// ChannelErrorCodeIn applies the In predicate on the "channel_error_code" field.
func ChannelErrorCodeIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldChannelErrorCode, vs...))
}

// ChannelErrorCodeNotIn applies the NotIn predicate on the "channel_error_code" field.
func ChannelErrorCodeNotIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldChannelErrorCode, vs...))
}

// ChannelErrorCodeGT applies the GT predicate on the "channel_error_code" field.
func ChannelErrorCodeGT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldChannelErrorCode, v))
}

// ChannelErrorCodeGTE applies the GTE predicate on the "channel_error_code" field.
func ChannelErrorCodeGTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldChannelErrorCode, v))
}

// ChannelErrorCodeLT applies the LT predicate on the "channel_error_code" field.
func ChannelErrorCodeLT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldChannelErrorCode, v))
}

// ChannelErrorCodeLTE applies the LTE predicate on the "channel_error_code" field.
func ChannelErrorCodeLTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldChannelErrorCode, v))
}

// ChannelErrorCodeContains applies the Contains predicate on the "channel_error_code" field.
func ChannelErrorCodeContains(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContains(FieldChannelErrorCode, v))
}

// ChannelErrorCodeHasPrefix applies the HasPrefix predicate on the "channel_error_code" field.
func ChannelErrorCodeHasPrefix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasPrefix(FieldChannelErrorCode, v))
}

// ChannelErrorCodeHasSuffix applies the HasSuffix predicate on the "channel_error_code" field.
func ChannelErrorCodeHasSuffix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasSuffix(FieldChannelErrorCode, v))
}

// ChannelErrorCodeIsNil applies the IsNil predicate on the "channel_error_code" field.
func ChannelErrorCodeIsNil() predicate.Refund {
	return predicate.Refund(sql.FieldIsNull(FieldChannelErrorCode))
}

// ChannelErrorCodeNotNil applies the NotNil predicate on the "channel_error_code" field.
func ChannelErrorCodeNotNil() predicate.Refund {
	return predicate.Refund(sql.FieldNotNull(FieldChannelErrorCode))
}

// ChannelErrorCodeEqualFold applies the EqualFold predicate on the "channel_error_code" field.
func ChannelErrorCodeEqualFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEqualFold(FieldChannelErrorCode, v))
}

// ChannelErrorCodeContainsFold applies the ContainsFold predicate on the "channel_error_code" field.
func ChannelErrorCodeContainsFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContainsFold(FieldChannelErrorCode, v))
}

// ChannelErrorMsgEQ applies the EQ predicate on the "channel_error_msg" field.
func ChannelErrorMsgEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldChannelErrorMsg, v))
}

// ChannelErrorMsgNEQ applies the NEQ predicate on the "channel_error_msg" field.
func ChannelErrorMsgNEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldChannelErrorMsg, v))
}

// ChannelErrorMsgIn applies the In predicate on the "channel_error_msg" field.
func ChannelErrorMsgIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldChannelErrorMsg, vs...))
}

// ChannelErrorMsgNotIn applies the NotIn predicate on the "channel_error_msg" field.
func ChannelErrorMsgNotIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldChannelErrorMsg, vs...))
}

// ChannelErrorMsgGT applies the GT predicate on the "channel_error_msg" field.
func ChannelErrorMsgGT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldChannelErrorMsg, v))
}

// ChannelErrorMsgGTE applies the GTE predicate on the "channel_error_msg" field.
func ChannelErrorMsgGTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldChannelErrorMsg, v))
}

// ChannelErrorMsgLT applies the LT predicate on the "channel_error_msg" field.
func ChannelErrorMsgLT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldChannelErrorMsg, v))
}

// ChannelErrorMsgLTE applies the LTE predicate on the "channel_error_msg" field.
func ChannelErrorMsgLTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldChannelErrorMsg, v))
}

// ChannelErrorMsgContains applies the Contains predicate on the "channel_error_msg" field.
func ChannelErrorMsgContains(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContains(FieldChannelErrorMsg, v))
}

// ChannelErrorMsgHasPrefix applies the HasPrefix predicate on the "channel_error_msg" field.
func ChannelErrorMsgHasPrefix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasPrefix(FieldChannelErrorMsg, v))
}

// ChannelErrorMsgHasSuffix applies the HasSuffix predicate on the "channel_error_msg" field.
func ChannelErrorMsgHasSuffix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasSuffix(FieldChannelErrorMsg, v))
}

// ChannelErrorMsgIsNil applies the IsNil predicate on the "channel_error_msg" field.
func ChannelErrorMsgIsNil() predicate.Refund {
	return predicate.Refund(sql.FieldIsNull(FieldChannelErrorMsg))
}

// ChannelErrorMsgNotNil applies the NotNil predicate on the "channel_error_msg" field.
func ChannelErrorMsgNotNil() predicate.Refund {
	return predicate.Refund(sql.FieldNotNull(FieldChannelErrorMsg))
}

// ChannelErrorMsgEqualFold applies the EqualFold predicate on the "channel_error_msg" field.
func ChannelErrorMsgEqualFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEqualFold(FieldChannelErrorMsg, v))
}

// ChannelErrorMsgContainsFold applies the ContainsFold predicate on the "channel_error_msg" field.
func ChannelErrorMsgContainsFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContainsFold(FieldChannelErrorMsg, v))
}

// ChannelNotifyDataEQ applies the EQ predicate on the "channel_notify_data" field.
func ChannelNotifyDataEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEQ(FieldChannelNotifyData, v))
}

// ChannelNotifyDataNEQ applies the NEQ predicate on the "channel_notify_data" field.
func ChannelNotifyDataNEQ(v string) predicate.Refund {
	return predicate.Refund(sql.FieldNEQ(FieldChannelNotifyData, v))
}

// ChannelNotifyDataIn applies the In predicate on the "channel_notify_data" field.
func ChannelNotifyDataIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldIn(FieldChannelNotifyData, vs...))
}

// ChannelNotifyDataNotIn applies the NotIn predicate on the "channel_notify_data" field.
func ChannelNotifyDataNotIn(vs ...string) predicate.Refund {
	return predicate.Refund(sql.FieldNotIn(FieldChannelNotifyData, vs...))
}

// ChannelNotifyDataGT applies the GT predicate on the "channel_notify_data" field.
func ChannelNotifyDataGT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGT(FieldChannelNotifyData, v))
}

// ChannelNotifyDataGTE applies the GTE predicate on the "channel_notify_data" field.
func ChannelNotifyDataGTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldGTE(FieldChannelNotifyData, v))
}

// ChannelNotifyDataLT applies the LT predicate on the "channel_notify_data" field.
func ChannelNotifyDataLT(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLT(FieldChannelNotifyData, v))
}

// ChannelNotifyDataLTE applies the LTE predicate on the "channel_notify_data" field.
func ChannelNotifyDataLTE(v string) predicate.Refund {
	return predicate.Refund(sql.FieldLTE(FieldChannelNotifyData, v))
}

// ChannelNotifyDataContains applies the Contains predicate on the "channel_notify_data" field.
func ChannelNotifyDataContains(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContains(FieldChannelNotifyData, v))
}

// ChannelNotifyDataHasPrefix applies the HasPrefix predicate on the "channel_notify_data" field.
func ChannelNotifyDataHasPrefix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasPrefix(FieldChannelNotifyData, v))
}

// ChannelNotifyDataHasSuffix applies the HasSuffix predicate on the "channel_notify_data" field.
func ChannelNotifyDataHasSuffix(v string) predicate.Refund {
	return predicate.Refund(sql.FieldHasSuffix(FieldChannelNotifyData, v))
}

// ChannelNotifyDataIsNil applies the IsNil predicate on the "channel_notify_data" field.
func ChannelNotifyDataIsNil() predicate.Refund {
	return predicate.Refund(sql.FieldIsNull(FieldChannelNotifyData))
}

// ChannelNotifyDataNotNil applies the NotNil predicate on the "channel_notify_data" field.
func ChannelNotifyDataNotNil() predicate.Refund {
	return predicate.Refund(sql.FieldNotNull(FieldChannelNotifyData))
}

// ChannelNotifyDataEqualFold applies the EqualFold predicate on the "channel_notify_data" field.
func ChannelNotifyDataEqualFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldEqualFold(FieldChannelNotifyData, v))
}

// ChannelNotifyDataContainsFold applies the ContainsFold predicate on the "channel_notify_data" field.
func ChannelNotifyDataContainsFold(v string) predicate.Refund {
	return predicate.Refund(sql.FieldContainsFold(FieldChannelNotifyData, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Refund) predicate.Refund {
	return predicate.Refund(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Refund) predicate.Refund {
	return predicate.Refund(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Refund) predicate.Refund {
	return predicate.Refund(sql.NotPredicates(p))
}
