// Code generated by ent, DO NOT EDIT.

package order

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/agui-coder/simple-admin-pay-rpc/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uint64) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint64) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint64) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint64) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint64) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint64) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint64) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint64) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint64) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUpdatedAt, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v uint8) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldStatus, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldDeletedAt, v))
}

// AppID applies equality check predicate on the "app_id" field. It's identical to AppIDEQ.
func AppID(v uint64) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldAppID, v))
}

// ChannelID applies equality check predicate on the "channel_id" field. It's identical to ChannelIDEQ.
func ChannelID(v uint64) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldChannelID, v))
}

// ChannelCode applies equality check predicate on the "channel_code" field. It's identical to ChannelCodeEQ.
func ChannelCode(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldChannelCode, v))
}

// MerchantOrderID applies equality check predicate on the "merchant_order_id" field. It's identical to MerchantOrderIDEQ.
func MerchantOrderID(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldMerchantOrderID, v))
}

// Subject applies equality check predicate on the "subject" field. It's identical to SubjectEQ.
func Subject(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldSubject, v))
}

// Body applies equality check predicate on the "body" field. It's identical to BodyEQ.
func Body(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldBody, v))
}

// NotifyURL applies equality check predicate on the "notify_url" field. It's identical to NotifyURLEQ.
func NotifyURL(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldNotifyURL, v))
}

// Price applies equality check predicate on the "price" field. It's identical to PriceEQ.
func Price(v int32) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldPrice, v))
}

// ChannelFeeRate applies equality check predicate on the "channel_fee_rate" field. It's identical to ChannelFeeRateEQ.
func ChannelFeeRate(v float64) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldChannelFeeRate, v))
}

// ChannelFeePrice applies equality check predicate on the "channel_fee_price" field. It's identical to ChannelFeePriceEQ.
func ChannelFeePrice(v int32) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldChannelFeePrice, v))
}

// UserIP applies equality check predicate on the "user_ip" field. It's identical to UserIPEQ.
func UserIP(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUserIP, v))
}

// ExpireTime applies equality check predicate on the "expire_time" field. It's identical to ExpireTimeEQ.
func ExpireTime(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldExpireTime, v))
}

// SuccessTime applies equality check predicate on the "success_time" field. It's identical to SuccessTimeEQ.
func SuccessTime(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldSuccessTime, v))
}

// NotifyTime applies equality check predicate on the "notify_time" field. It's identical to NotifyTimeEQ.
func NotifyTime(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldNotifyTime, v))
}

// ExtensionID applies equality check predicate on the "extension_id" field. It's identical to ExtensionIDEQ.
func ExtensionID(v uint64) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldExtensionID, v))
}

// No applies equality check predicate on the "no" field. It's identical to NoEQ.
func No(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldNo, v))
}

// RefundPrice applies equality check predicate on the "refund_price" field. It's identical to RefundPriceEQ.
func RefundPrice(v int32) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldRefundPrice, v))
}

// ChannelUserID applies equality check predicate on the "channel_user_id" field. It's identical to ChannelUserIDEQ.
func ChannelUserID(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldChannelUserID, v))
}

// ChannelOrderNo applies equality check predicate on the "channel_order_no" field. It's identical to ChannelOrderNoEQ.
func ChannelOrderNo(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldChannelOrderNo, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldUpdatedAt, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v uint8) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v uint8) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...uint8) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...uint8) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v uint8) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v uint8) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v uint8) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v uint8) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldStatus, v))
}

// StatusIsNil applies the IsNil predicate on the "status" field.
func StatusIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldStatus))
}

// StatusNotNil applies the NotNil predicate on the "status" field.
func StatusNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldStatus))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldDeletedAt))
}

// AppIDEQ applies the EQ predicate on the "app_id" field.
func AppIDEQ(v uint64) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldAppID, v))
}

// AppIDNEQ applies the NEQ predicate on the "app_id" field.
func AppIDNEQ(v uint64) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldAppID, v))
}

// AppIDIn applies the In predicate on the "app_id" field.
func AppIDIn(vs ...uint64) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldAppID, vs...))
}

// AppIDNotIn applies the NotIn predicate on the "app_id" field.
func AppIDNotIn(vs ...uint64) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldAppID, vs...))
}

// AppIDGT applies the GT predicate on the "app_id" field.
func AppIDGT(v uint64) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldAppID, v))
}

// AppIDGTE applies the GTE predicate on the "app_id" field.
func AppIDGTE(v uint64) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldAppID, v))
}

// AppIDLT applies the LT predicate on the "app_id" field.
func AppIDLT(v uint64) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldAppID, v))
}

// AppIDLTE applies the LTE predicate on the "app_id" field.
func AppIDLTE(v uint64) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldAppID, v))
}

// ChannelIDEQ applies the EQ predicate on the "channel_id" field.
func ChannelIDEQ(v uint64) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldChannelID, v))
}

// ChannelIDNEQ applies the NEQ predicate on the "channel_id" field.
func ChannelIDNEQ(v uint64) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldChannelID, v))
}

// ChannelIDIn applies the In predicate on the "channel_id" field.
func ChannelIDIn(vs ...uint64) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldChannelID, vs...))
}

// ChannelIDNotIn applies the NotIn predicate on the "channel_id" field.
func ChannelIDNotIn(vs ...uint64) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldChannelID, vs...))
}

// ChannelIDGT applies the GT predicate on the "channel_id" field.
func ChannelIDGT(v uint64) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldChannelID, v))
}

// ChannelIDGTE applies the GTE predicate on the "channel_id" field.
func ChannelIDGTE(v uint64) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldChannelID, v))
}

// ChannelIDLT applies the LT predicate on the "channel_id" field.
func ChannelIDLT(v uint64) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldChannelID, v))
}

// ChannelIDLTE applies the LTE predicate on the "channel_id" field.
func ChannelIDLTE(v uint64) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldChannelID, v))
}

// ChannelIDIsNil applies the IsNil predicate on the "channel_id" field.
func ChannelIDIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldChannelID))
}

// ChannelIDNotNil applies the NotNil predicate on the "channel_id" field.
func ChannelIDNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldChannelID))
}

// ChannelCodeEQ applies the EQ predicate on the "channel_code" field.
func ChannelCodeEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldChannelCode, v))
}

// ChannelCodeNEQ applies the NEQ predicate on the "channel_code" field.
func ChannelCodeNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldChannelCode, v))
}

// ChannelCodeIn applies the In predicate on the "channel_code" field.
func ChannelCodeIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldChannelCode, vs...))
}

// ChannelCodeNotIn applies the NotIn predicate on the "channel_code" field.
func ChannelCodeNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldChannelCode, vs...))
}

// ChannelCodeGT applies the GT predicate on the "channel_code" field.
func ChannelCodeGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldChannelCode, v))
}

// ChannelCodeGTE applies the GTE predicate on the "channel_code" field.
func ChannelCodeGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldChannelCode, v))
}

// ChannelCodeLT applies the LT predicate on the "channel_code" field.
func ChannelCodeLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldChannelCode, v))
}

// ChannelCodeLTE applies the LTE predicate on the "channel_code" field.
func ChannelCodeLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldChannelCode, v))
}

// ChannelCodeContains applies the Contains predicate on the "channel_code" field.
func ChannelCodeContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldChannelCode, v))
}

// ChannelCodeHasPrefix applies the HasPrefix predicate on the "channel_code" field.
func ChannelCodeHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldChannelCode, v))
}

// ChannelCodeHasSuffix applies the HasSuffix predicate on the "channel_code" field.
func ChannelCodeHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldChannelCode, v))
}

// ChannelCodeIsNil applies the IsNil predicate on the "channel_code" field.
func ChannelCodeIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldChannelCode))
}

// ChannelCodeNotNil applies the NotNil predicate on the "channel_code" field.
func ChannelCodeNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldChannelCode))
}

// ChannelCodeEqualFold applies the EqualFold predicate on the "channel_code" field.
func ChannelCodeEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldChannelCode, v))
}

// ChannelCodeContainsFold applies the ContainsFold predicate on the "channel_code" field.
func ChannelCodeContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldChannelCode, v))
}

// MerchantOrderIDEQ applies the EQ predicate on the "merchant_order_id" field.
func MerchantOrderIDEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldMerchantOrderID, v))
}

// MerchantOrderIDNEQ applies the NEQ predicate on the "merchant_order_id" field.
func MerchantOrderIDNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldMerchantOrderID, v))
}

// MerchantOrderIDIn applies the In predicate on the "merchant_order_id" field.
func MerchantOrderIDIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldMerchantOrderID, vs...))
}

// MerchantOrderIDNotIn applies the NotIn predicate on the "merchant_order_id" field.
func MerchantOrderIDNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldMerchantOrderID, vs...))
}

// MerchantOrderIDGT applies the GT predicate on the "merchant_order_id" field.
func MerchantOrderIDGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldMerchantOrderID, v))
}

// MerchantOrderIDGTE applies the GTE predicate on the "merchant_order_id" field.
func MerchantOrderIDGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldMerchantOrderID, v))
}

// MerchantOrderIDLT applies the LT predicate on the "merchant_order_id" field.
func MerchantOrderIDLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldMerchantOrderID, v))
}

// MerchantOrderIDLTE applies the LTE predicate on the "merchant_order_id" field.
func MerchantOrderIDLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldMerchantOrderID, v))
}

// MerchantOrderIDContains applies the Contains predicate on the "merchant_order_id" field.
func MerchantOrderIDContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldMerchantOrderID, v))
}

// MerchantOrderIDHasPrefix applies the HasPrefix predicate on the "merchant_order_id" field.
func MerchantOrderIDHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldMerchantOrderID, v))
}

// MerchantOrderIDHasSuffix applies the HasSuffix predicate on the "merchant_order_id" field.
func MerchantOrderIDHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldMerchantOrderID, v))
}

// MerchantOrderIDEqualFold applies the EqualFold predicate on the "merchant_order_id" field.
func MerchantOrderIDEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldMerchantOrderID, v))
}

// MerchantOrderIDContainsFold applies the ContainsFold predicate on the "merchant_order_id" field.
func MerchantOrderIDContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldMerchantOrderID, v))
}

// SubjectEQ applies the EQ predicate on the "subject" field.
func SubjectEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldSubject, v))
}

// SubjectNEQ applies the NEQ predicate on the "subject" field.
func SubjectNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldSubject, v))
}

// SubjectIn applies the In predicate on the "subject" field.
func SubjectIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldSubject, vs...))
}

// SubjectNotIn applies the NotIn predicate on the "subject" field.
func SubjectNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldSubject, vs...))
}

// SubjectGT applies the GT predicate on the "subject" field.
func SubjectGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldSubject, v))
}

// SubjectGTE applies the GTE predicate on the "subject" field.
func SubjectGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldSubject, v))
}

// SubjectLT applies the LT predicate on the "subject" field.
func SubjectLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldSubject, v))
}

// SubjectLTE applies the LTE predicate on the "subject" field.
func SubjectLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldSubject, v))
}

// SubjectContains applies the Contains predicate on the "subject" field.
func SubjectContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldSubject, v))
}

// SubjectHasPrefix applies the HasPrefix predicate on the "subject" field.
func SubjectHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldSubject, v))
}

// SubjectHasSuffix applies the HasSuffix predicate on the "subject" field.
func SubjectHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldSubject, v))
}

// SubjectEqualFold applies the EqualFold predicate on the "subject" field.
func SubjectEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldSubject, v))
}

// SubjectContainsFold applies the ContainsFold predicate on the "subject" field.
func SubjectContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldSubject, v))
}

// BodyEQ applies the EQ predicate on the "body" field.
func BodyEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldBody, v))
}

// BodyNEQ applies the NEQ predicate on the "body" field.
func BodyNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldBody, v))
}

// BodyIn applies the In predicate on the "body" field.
func BodyIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldBody, vs...))
}

// BodyNotIn applies the NotIn predicate on the "body" field.
func BodyNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldBody, vs...))
}

// BodyGT applies the GT predicate on the "body" field.
func BodyGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldBody, v))
}

// BodyGTE applies the GTE predicate on the "body" field.
func BodyGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldBody, v))
}

// BodyLT applies the LT predicate on the "body" field.
func BodyLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldBody, v))
}

// BodyLTE applies the LTE predicate on the "body" field.
func BodyLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldBody, v))
}

// BodyContains applies the Contains predicate on the "body" field.
func BodyContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldBody, v))
}

// BodyHasPrefix applies the HasPrefix predicate on the "body" field.
func BodyHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldBody, v))
}

// BodyHasSuffix applies the HasSuffix predicate on the "body" field.
func BodyHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldBody, v))
}

// BodyEqualFold applies the EqualFold predicate on the "body" field.
func BodyEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldBody, v))
}

// BodyContainsFold applies the ContainsFold predicate on the "body" field.
func BodyContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldBody, v))
}

// NotifyURLEQ applies the EQ predicate on the "notify_url" field.
func NotifyURLEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldNotifyURL, v))
}

// NotifyURLNEQ applies the NEQ predicate on the "notify_url" field.
func NotifyURLNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldNotifyURL, v))
}

// NotifyURLIn applies the In predicate on the "notify_url" field.
func NotifyURLIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldNotifyURL, vs...))
}

// NotifyURLNotIn applies the NotIn predicate on the "notify_url" field.
func NotifyURLNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldNotifyURL, vs...))
}

// NotifyURLGT applies the GT predicate on the "notify_url" field.
func NotifyURLGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldNotifyURL, v))
}

// NotifyURLGTE applies the GTE predicate on the "notify_url" field.
func NotifyURLGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldNotifyURL, v))
}

// NotifyURLLT applies the LT predicate on the "notify_url" field.
func NotifyURLLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldNotifyURL, v))
}

// NotifyURLLTE applies the LTE predicate on the "notify_url" field.
func NotifyURLLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldNotifyURL, v))
}

// NotifyURLContains applies the Contains predicate on the "notify_url" field.
func NotifyURLContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldNotifyURL, v))
}

// NotifyURLHasPrefix applies the HasPrefix predicate on the "notify_url" field.
func NotifyURLHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldNotifyURL, v))
}

// NotifyURLHasSuffix applies the HasSuffix predicate on the "notify_url" field.
func NotifyURLHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldNotifyURL, v))
}

// NotifyURLEqualFold applies the EqualFold predicate on the "notify_url" field.
func NotifyURLEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldNotifyURL, v))
}

// NotifyURLContainsFold applies the ContainsFold predicate on the "notify_url" field.
func NotifyURLContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldNotifyURL, v))
}

// PriceEQ applies the EQ predicate on the "price" field.
func PriceEQ(v int32) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldPrice, v))
}

// PriceNEQ applies the NEQ predicate on the "price" field.
func PriceNEQ(v int32) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldPrice, v))
}

// PriceIn applies the In predicate on the "price" field.
func PriceIn(vs ...int32) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldPrice, vs...))
}

// PriceNotIn applies the NotIn predicate on the "price" field.
func PriceNotIn(vs ...int32) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldPrice, vs...))
}

// PriceGT applies the GT predicate on the "price" field.
func PriceGT(v int32) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldPrice, v))
}

// PriceGTE applies the GTE predicate on the "price" field.
func PriceGTE(v int32) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldPrice, v))
}

// PriceLT applies the LT predicate on the "price" field.
func PriceLT(v int32) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldPrice, v))
}

// PriceLTE applies the LTE predicate on the "price" field.
func PriceLTE(v int32) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldPrice, v))
}

// ChannelFeeRateEQ applies the EQ predicate on the "channel_fee_rate" field.
func ChannelFeeRateEQ(v float64) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldChannelFeeRate, v))
}

// ChannelFeeRateNEQ applies the NEQ predicate on the "channel_fee_rate" field.
func ChannelFeeRateNEQ(v float64) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldChannelFeeRate, v))
}

// ChannelFeeRateIn applies the In predicate on the "channel_fee_rate" field.
func ChannelFeeRateIn(vs ...float64) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldChannelFeeRate, vs...))
}

// ChannelFeeRateNotIn applies the NotIn predicate on the "channel_fee_rate" field.
func ChannelFeeRateNotIn(vs ...float64) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldChannelFeeRate, vs...))
}

// ChannelFeeRateGT applies the GT predicate on the "channel_fee_rate" field.
func ChannelFeeRateGT(v float64) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldChannelFeeRate, v))
}

// ChannelFeeRateGTE applies the GTE predicate on the "channel_fee_rate" field.
func ChannelFeeRateGTE(v float64) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldChannelFeeRate, v))
}

// ChannelFeeRateLT applies the LT predicate on the "channel_fee_rate" field.
func ChannelFeeRateLT(v float64) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldChannelFeeRate, v))
}

// ChannelFeeRateLTE applies the LTE predicate on the "channel_fee_rate" field.
func ChannelFeeRateLTE(v float64) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldChannelFeeRate, v))
}

// ChannelFeeRateIsNil applies the IsNil predicate on the "channel_fee_rate" field.
func ChannelFeeRateIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldChannelFeeRate))
}

// ChannelFeeRateNotNil applies the NotNil predicate on the "channel_fee_rate" field.
func ChannelFeeRateNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldChannelFeeRate))
}

// ChannelFeePriceEQ applies the EQ predicate on the "channel_fee_price" field.
func ChannelFeePriceEQ(v int32) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldChannelFeePrice, v))
}

// ChannelFeePriceNEQ applies the NEQ predicate on the "channel_fee_price" field.
func ChannelFeePriceNEQ(v int32) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldChannelFeePrice, v))
}

// ChannelFeePriceIn applies the In predicate on the "channel_fee_price" field.
func ChannelFeePriceIn(vs ...int32) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldChannelFeePrice, vs...))
}

// ChannelFeePriceNotIn applies the NotIn predicate on the "channel_fee_price" field.
func ChannelFeePriceNotIn(vs ...int32) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldChannelFeePrice, vs...))
}

// ChannelFeePriceGT applies the GT predicate on the "channel_fee_price" field.
func ChannelFeePriceGT(v int32) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldChannelFeePrice, v))
}

// ChannelFeePriceGTE applies the GTE predicate on the "channel_fee_price" field.
func ChannelFeePriceGTE(v int32) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldChannelFeePrice, v))
}

// ChannelFeePriceLT applies the LT predicate on the "channel_fee_price" field.
func ChannelFeePriceLT(v int32) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldChannelFeePrice, v))
}

// ChannelFeePriceLTE applies the LTE predicate on the "channel_fee_price" field.
func ChannelFeePriceLTE(v int32) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldChannelFeePrice, v))
}

// ChannelFeePriceIsNil applies the IsNil predicate on the "channel_fee_price" field.
func ChannelFeePriceIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldChannelFeePrice))
}

// ChannelFeePriceNotNil applies the NotNil predicate on the "channel_fee_price" field.
func ChannelFeePriceNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldChannelFeePrice))
}

// UserIPEQ applies the EQ predicate on the "user_ip" field.
func UserIPEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUserIP, v))
}

// UserIPNEQ applies the NEQ predicate on the "user_ip" field.
func UserIPNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldUserIP, v))
}

// UserIPIn applies the In predicate on the "user_ip" field.
func UserIPIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldUserIP, vs...))
}

// UserIPNotIn applies the NotIn predicate on the "user_ip" field.
func UserIPNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldUserIP, vs...))
}

// UserIPGT applies the GT predicate on the "user_ip" field.
func UserIPGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldUserIP, v))
}

// UserIPGTE applies the GTE predicate on the "user_ip" field.
func UserIPGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldUserIP, v))
}

// UserIPLT applies the LT predicate on the "user_ip" field.
func UserIPLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldUserIP, v))
}

// UserIPLTE applies the LTE predicate on the "user_ip" field.
func UserIPLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldUserIP, v))
}

// UserIPContains applies the Contains predicate on the "user_ip" field.
func UserIPContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldUserIP, v))
}

// UserIPHasPrefix applies the HasPrefix predicate on the "user_ip" field.
func UserIPHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldUserIP, v))
}

// UserIPHasSuffix applies the HasSuffix predicate on the "user_ip" field.
func UserIPHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldUserIP, v))
}

// UserIPEqualFold applies the EqualFold predicate on the "user_ip" field.
func UserIPEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldUserIP, v))
}

// UserIPContainsFold applies the ContainsFold predicate on the "user_ip" field.
func UserIPContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldUserIP, v))
}

// ExpireTimeEQ applies the EQ predicate on the "expire_time" field.
func ExpireTimeEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldExpireTime, v))
}

// ExpireTimeNEQ applies the NEQ predicate on the "expire_time" field.
func ExpireTimeNEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldExpireTime, v))
}

// ExpireTimeIn applies the In predicate on the "expire_time" field.
func ExpireTimeIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldExpireTime, vs...))
}

// ExpireTimeNotIn applies the NotIn predicate on the "expire_time" field.
func ExpireTimeNotIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldExpireTime, vs...))
}

// ExpireTimeGT applies the GT predicate on the "expire_time" field.
func ExpireTimeGT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldExpireTime, v))
}

// ExpireTimeGTE applies the GTE predicate on the "expire_time" field.
func ExpireTimeGTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldExpireTime, v))
}

// ExpireTimeLT applies the LT predicate on the "expire_time" field.
func ExpireTimeLT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldExpireTime, v))
}

// ExpireTimeLTE applies the LTE predicate on the "expire_time" field.
func ExpireTimeLTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldExpireTime, v))
}

// SuccessTimeEQ applies the EQ predicate on the "success_time" field.
func SuccessTimeEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldSuccessTime, v))
}

// SuccessTimeNEQ applies the NEQ predicate on the "success_time" field.
func SuccessTimeNEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldSuccessTime, v))
}

// SuccessTimeIn applies the In predicate on the "success_time" field.
func SuccessTimeIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldSuccessTime, vs...))
}

// SuccessTimeNotIn applies the NotIn predicate on the "success_time" field.
func SuccessTimeNotIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldSuccessTime, vs...))
}

// SuccessTimeGT applies the GT predicate on the "success_time" field.
func SuccessTimeGT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldSuccessTime, v))
}

// SuccessTimeGTE applies the GTE predicate on the "success_time" field.
func SuccessTimeGTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldSuccessTime, v))
}

// SuccessTimeLT applies the LT predicate on the "success_time" field.
func SuccessTimeLT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldSuccessTime, v))
}

// SuccessTimeLTE applies the LTE predicate on the "success_time" field.
func SuccessTimeLTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldSuccessTime, v))
}

// SuccessTimeIsNil applies the IsNil predicate on the "success_time" field.
func SuccessTimeIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldSuccessTime))
}

// SuccessTimeNotNil applies the NotNil predicate on the "success_time" field.
func SuccessTimeNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldSuccessTime))
}

// NotifyTimeEQ applies the EQ predicate on the "notify_time" field.
func NotifyTimeEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldNotifyTime, v))
}

// NotifyTimeNEQ applies the NEQ predicate on the "notify_time" field.
func NotifyTimeNEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldNotifyTime, v))
}

// NotifyTimeIn applies the In predicate on the "notify_time" field.
func NotifyTimeIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldNotifyTime, vs...))
}

// NotifyTimeNotIn applies the NotIn predicate on the "notify_time" field.
func NotifyTimeNotIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldNotifyTime, vs...))
}

// NotifyTimeGT applies the GT predicate on the "notify_time" field.
func NotifyTimeGT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldNotifyTime, v))
}

// NotifyTimeGTE applies the GTE predicate on the "notify_time" field.
func NotifyTimeGTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldNotifyTime, v))
}

// NotifyTimeLT applies the LT predicate on the "notify_time" field.
func NotifyTimeLT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldNotifyTime, v))
}

// NotifyTimeLTE applies the LTE predicate on the "notify_time" field.
func NotifyTimeLTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldNotifyTime, v))
}

// NotifyTimeIsNil applies the IsNil predicate on the "notify_time" field.
func NotifyTimeIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldNotifyTime))
}

// NotifyTimeNotNil applies the NotNil predicate on the "notify_time" field.
func NotifyTimeNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldNotifyTime))
}

// ExtensionIDEQ applies the EQ predicate on the "extension_id" field.
func ExtensionIDEQ(v uint64) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldExtensionID, v))
}

// ExtensionIDNEQ applies the NEQ predicate on the "extension_id" field.
func ExtensionIDNEQ(v uint64) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldExtensionID, v))
}

// ExtensionIDIn applies the In predicate on the "extension_id" field.
func ExtensionIDIn(vs ...uint64) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldExtensionID, vs...))
}

// ExtensionIDNotIn applies the NotIn predicate on the "extension_id" field.
func ExtensionIDNotIn(vs ...uint64) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldExtensionID, vs...))
}

// ExtensionIDGT applies the GT predicate on the "extension_id" field.
func ExtensionIDGT(v uint64) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldExtensionID, v))
}

// ExtensionIDGTE applies the GTE predicate on the "extension_id" field.
func ExtensionIDGTE(v uint64) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldExtensionID, v))
}

// ExtensionIDLT applies the LT predicate on the "extension_id" field.
func ExtensionIDLT(v uint64) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldExtensionID, v))
}

// ExtensionIDLTE applies the LTE predicate on the "extension_id" field.
func ExtensionIDLTE(v uint64) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldExtensionID, v))
}

// ExtensionIDIsNil applies the IsNil predicate on the "extension_id" field.
func ExtensionIDIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldExtensionID))
}

// ExtensionIDNotNil applies the NotNil predicate on the "extension_id" field.
func ExtensionIDNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldExtensionID))
}

// NoEQ applies the EQ predicate on the "no" field.
func NoEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldNo, v))
}

// NoNEQ applies the NEQ predicate on the "no" field.
func NoNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldNo, v))
}

// NoIn applies the In predicate on the "no" field.
func NoIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldNo, vs...))
}

// NoNotIn applies the NotIn predicate on the "no" field.
func NoNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldNo, vs...))
}

// NoGT applies the GT predicate on the "no" field.
func NoGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldNo, v))
}

// NoGTE applies the GTE predicate on the "no" field.
func NoGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldNo, v))
}

// NoLT applies the LT predicate on the "no" field.
func NoLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldNo, v))
}

// NoLTE applies the LTE predicate on the "no" field.
func NoLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldNo, v))
}

// NoContains applies the Contains predicate on the "no" field.
func NoContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldNo, v))
}

// NoHasPrefix applies the HasPrefix predicate on the "no" field.
func NoHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldNo, v))
}

// NoHasSuffix applies the HasSuffix predicate on the "no" field.
func NoHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldNo, v))
}

// NoIsNil applies the IsNil predicate on the "no" field.
func NoIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldNo))
}

// NoNotNil applies the NotNil predicate on the "no" field.
func NoNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldNo))
}

// NoEqualFold applies the EqualFold predicate on the "no" field.
func NoEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldNo, v))
}

// NoContainsFold applies the ContainsFold predicate on the "no" field.
func NoContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldNo, v))
}

// RefundPriceEQ applies the EQ predicate on the "refund_price" field.
func RefundPriceEQ(v int32) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldRefundPrice, v))
}

// RefundPriceNEQ applies the NEQ predicate on the "refund_price" field.
func RefundPriceNEQ(v int32) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldRefundPrice, v))
}

// RefundPriceIn applies the In predicate on the "refund_price" field.
func RefundPriceIn(vs ...int32) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldRefundPrice, vs...))
}

// RefundPriceNotIn applies the NotIn predicate on the "refund_price" field.
func RefundPriceNotIn(vs ...int32) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldRefundPrice, vs...))
}

// RefundPriceGT applies the GT predicate on the "refund_price" field.
func RefundPriceGT(v int32) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldRefundPrice, v))
}

// RefundPriceGTE applies the GTE predicate on the "refund_price" field.
func RefundPriceGTE(v int32) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldRefundPrice, v))
}

// RefundPriceLT applies the LT predicate on the "refund_price" field.
func RefundPriceLT(v int32) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldRefundPrice, v))
}

// RefundPriceLTE applies the LTE predicate on the "refund_price" field.
func RefundPriceLTE(v int32) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldRefundPrice, v))
}

// ChannelUserIDEQ applies the EQ predicate on the "channel_user_id" field.
func ChannelUserIDEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldChannelUserID, v))
}

// ChannelUserIDNEQ applies the NEQ predicate on the "channel_user_id" field.
func ChannelUserIDNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldChannelUserID, v))
}

// ChannelUserIDIn applies the In predicate on the "channel_user_id" field.
func ChannelUserIDIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldChannelUserID, vs...))
}

// ChannelUserIDNotIn applies the NotIn predicate on the "channel_user_id" field.
func ChannelUserIDNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldChannelUserID, vs...))
}

// ChannelUserIDGT applies the GT predicate on the "channel_user_id" field.
func ChannelUserIDGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldChannelUserID, v))
}

// ChannelUserIDGTE applies the GTE predicate on the "channel_user_id" field.
func ChannelUserIDGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldChannelUserID, v))
}

// ChannelUserIDLT applies the LT predicate on the "channel_user_id" field.
func ChannelUserIDLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldChannelUserID, v))
}

// ChannelUserIDLTE applies the LTE predicate on the "channel_user_id" field.
func ChannelUserIDLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldChannelUserID, v))
}

// ChannelUserIDContains applies the Contains predicate on the "channel_user_id" field.
func ChannelUserIDContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldChannelUserID, v))
}

// ChannelUserIDHasPrefix applies the HasPrefix predicate on the "channel_user_id" field.
func ChannelUserIDHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldChannelUserID, v))
}

// ChannelUserIDHasSuffix applies the HasSuffix predicate on the "channel_user_id" field.
func ChannelUserIDHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldChannelUserID, v))
}

// ChannelUserIDIsNil applies the IsNil predicate on the "channel_user_id" field.
func ChannelUserIDIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldChannelUserID))
}

// ChannelUserIDNotNil applies the NotNil predicate on the "channel_user_id" field.
func ChannelUserIDNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldChannelUserID))
}

// ChannelUserIDEqualFold applies the EqualFold predicate on the "channel_user_id" field.
func ChannelUserIDEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldChannelUserID, v))
}

// ChannelUserIDContainsFold applies the ContainsFold predicate on the "channel_user_id" field.
func ChannelUserIDContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldChannelUserID, v))
}

// ChannelOrderNoEQ applies the EQ predicate on the "channel_order_no" field.
func ChannelOrderNoEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldChannelOrderNo, v))
}

// ChannelOrderNoNEQ applies the NEQ predicate on the "channel_order_no" field.
func ChannelOrderNoNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldChannelOrderNo, v))
}

// ChannelOrderNoIn applies the In predicate on the "channel_order_no" field.
func ChannelOrderNoIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldChannelOrderNo, vs...))
}

// ChannelOrderNoNotIn applies the NotIn predicate on the "channel_order_no" field.
func ChannelOrderNoNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldChannelOrderNo, vs...))
}

// ChannelOrderNoGT applies the GT predicate on the "channel_order_no" field.
func ChannelOrderNoGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldChannelOrderNo, v))
}

// ChannelOrderNoGTE applies the GTE predicate on the "channel_order_no" field.
func ChannelOrderNoGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldChannelOrderNo, v))
}

// ChannelOrderNoLT applies the LT predicate on the "channel_order_no" field.
func ChannelOrderNoLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldChannelOrderNo, v))
}

// ChannelOrderNoLTE applies the LTE predicate on the "channel_order_no" field.
func ChannelOrderNoLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldChannelOrderNo, v))
}

// ChannelOrderNoContains applies the Contains predicate on the "channel_order_no" field.
func ChannelOrderNoContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldChannelOrderNo, v))
}

// ChannelOrderNoHasPrefix applies the HasPrefix predicate on the "channel_order_no" field.
func ChannelOrderNoHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldChannelOrderNo, v))
}

// ChannelOrderNoHasSuffix applies the HasSuffix predicate on the "channel_order_no" field.
func ChannelOrderNoHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldChannelOrderNo, v))
}

// ChannelOrderNoIsNil applies the IsNil predicate on the "channel_order_no" field.
func ChannelOrderNoIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldChannelOrderNo))
}

// ChannelOrderNoNotNil applies the NotNil predicate on the "channel_order_no" field.
func ChannelOrderNoNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldChannelOrderNo))
}

// ChannelOrderNoEqualFold applies the EqualFold predicate on the "channel_order_no" field.
func ChannelOrderNoEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldChannelOrderNo, v))
}

// ChannelOrderNoContainsFold applies the ContainsFold predicate on the "channel_order_no" field.
func ChannelOrderNoContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldChannelOrderNo, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Order) predicate.Order {
	return predicate.Order(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Order) predicate.Order {
	return predicate.Order(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Order) predicate.Order {
	return predicate.Order(sql.NotPredicates(p))
}
